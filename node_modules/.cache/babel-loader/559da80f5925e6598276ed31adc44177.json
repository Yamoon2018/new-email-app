{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar assert = require('assert');\n/**\n * Expose `thunkify()`.\n */\n\n\nmodule.exports = thunkify;\n/**\n * Wrap a regular callback `fn` as a thunk.\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction thunkify(fn) {\n  assert('function' == typeof fn, 'function required');\n  return function () {\n    var args = new Array(arguments.length);\n    var ctx = this;\n\n    for (var i = 0; i < args.length; ++i) {\n      args[i] = arguments[i];\n    }\n\n    return function (done) {\n      var called;\n      args.push(function () {\n        if (called) return;\n        called = true;\n        done.apply(null, arguments);\n      });\n\n      try {\n        fn.apply(ctx, args);\n      } catch (err) {\n        done(err);\n      }\n    };\n  };\n}\n\n;","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/thunkify/index.js"],"names":["assert","require","module","exports","thunkify","fn","args","Array","arguments","length","ctx","i","done","called","push","apply","err"],"mappings":"AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAT,CAAkBC,EAAlB,EAAqB;AACnBL,EAAAA,MAAM,CAAC,cAAc,OAAOK,EAAtB,EAA0B,mBAA1B,CAAN;AAEA,SAAO,YAAU;AACf,QAAIC,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACC,MAApB,CAAX;AACA,QAAIC,GAAG,GAAG,IAAV;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,IAAI,CAACG,MAAxB,EAAgC,EAAEE,CAAlC,EAAqC;AACnCL,MAAAA,IAAI,CAACK,CAAD,CAAJ,GAAUH,SAAS,CAACG,CAAD,CAAnB;AACD;;AAED,WAAO,UAASC,IAAT,EAAc;AACnB,UAAIC,MAAJ;AAEAP,MAAAA,IAAI,CAACQ,IAAL,CAAU,YAAU;AAClB,YAAID,MAAJ,EAAY;AACZA,QAAAA,MAAM,GAAG,IAAT;AACAD,QAAAA,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBP,SAAjB;AACD,OAJD;;AAMA,UAAI;AACFH,QAAAA,EAAE,CAACU,KAAH,CAASL,GAAT,EAAcJ,IAAd;AACD,OAFD,CAEE,OAAOU,GAAP,EAAY;AACZJ,QAAAA,IAAI,CAACI,GAAD,CAAJ;AACD;AACF,KAdD;AAeD,GAvBD;AAwBD;;AAAA","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar assert = require('assert');\n\n/**\n * Expose `thunkify()`.\n */\n\nmodule.exports = thunkify;\n\n/**\n * Wrap a regular callback `fn` as a thunk.\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction thunkify(fn){\n  assert('function' == typeof fn, 'function required');\n\n  return function(){\n    var args = new Array(arguments.length);\n    var ctx = this;\n\n    for(var i = 0; i < args.length; ++i) {\n      args[i] = arguments[i];\n    }\n\n    return function(done){\n      var called;\n\n      args.push(function(){\n        if (called) return;\n        called = true;\n        done.apply(null, arguments);\n      });\n\n      try {\n        fn.apply(ctx, args);\n      } catch (err) {\n        done(err);\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}