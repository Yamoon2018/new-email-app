{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar crypto = require('crypto');\n\nvar Readable = require('readable-stream');\n\n;\n\nvar dataUriToBuffer = require('data-uri-to-buffer');\n\nvar NotModifiedError = require('./notmodified');\n\nvar debug = require('debug')('get-uri:data');\n/**\n * Module exports.\n */\n\n\nmodule.exports = get;\n/**\n * Returns a Readable stream from a \"data:\" URI.\n *\n * @api protected\n */\n\nfunction get(parsed, opts, fn) {\n  var uri = parsed.href;\n  var cache = opts.cache; // need to create a SHA1 hash of the URI string, for cacheability checks\n  // in future `getUri()` calls with the same data URI passed in.\n\n  var shasum = crypto.createHash('sha1');\n  shasum.update(uri);\n  var hash = shasum.digest('hex');\n  debug('generated SHA1 hash for \"data:\" URI: %o', hash); // check if the cache is the same \"data:\" URI that was previously passed in.\n\n  if (cache && cache.hash == hash) {\n    debug('got matching cache SHA1 hash: %o', hash);\n    fn(new NotModifiedError());\n  } else {\n    debug('creating Readable stream from \"data:\" URI buffer');\n    var buf = dataUriToBuffer(uri, opts);\n    var rs = new Readable();\n    rs._read = read(buf);\n    buf = null;\n    rs.hash = hash;\n    fn(null, rs);\n  }\n}\n/**\n * Function that returns a Readable `_read` function implementation.\n *\n * @api private\n */\n\n\nfunction read(buf) {\n  return function (n) {\n    this.push(buf);\n    this.push(null);\n    buf = null;\n  };\n}","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/get-uri/data.js"],"names":["crypto","require","Readable","dataUriToBuffer","NotModifiedError","debug","module","exports","get","parsed","opts","fn","uri","href","cache","shasum","createHash","update","hash","digest","buf","rs","_read","read","n","push"],"mappings":"AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AAA0C;;AAC1C,IAAIE,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,eAAD,CAA9B;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAAP,CAAiB,cAAjB,CAAZ;AAEA;AACA;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,EAA5B,EAAgC;AAC9B,MAAIC,GAAG,GAAGH,MAAM,CAACI,IAAjB;AACA,MAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB,CAF8B,CAI9B;AACA;;AACA,MAAIC,MAAM,GAAGf,MAAM,CAACgB,UAAP,CAAkB,MAAlB,CAAb;AACAD,EAAAA,MAAM,CAACE,MAAP,CAAcL,GAAd;AACA,MAAIM,IAAI,GAAGH,MAAM,CAACI,MAAP,CAAc,KAAd,CAAX;AACAd,EAAAA,KAAK,CAAC,yCAAD,EAA4Ca,IAA5C,CAAL,CAT8B,CAW9B;;AACA,MAAIJ,KAAK,IAAIA,KAAK,CAACI,IAAN,IAAcA,IAA3B,EAAiC;AAC/Bb,IAAAA,KAAK,CAAC,kCAAD,EAAqCa,IAArC,CAAL;AACAP,IAAAA,EAAE,CAAC,IAAIP,gBAAJ,EAAD,CAAF;AACD,GAHD,MAGO;AACLC,IAAAA,KAAK,CAAC,kDAAD,CAAL;AACA,QAAIe,GAAG,GAAGjB,eAAe,CAACS,GAAD,EAAMF,IAAN,CAAzB;AACA,QAAIW,EAAE,GAAG,IAAInB,QAAJ,EAAT;AACAmB,IAAAA,EAAE,CAACC,KAAH,GAAWC,IAAI,CAACH,GAAD,CAAf;AACAA,IAAAA,GAAG,GAAG,IAAN;AACAC,IAAAA,EAAE,CAACH,IAAH,GAAUA,IAAV;AACAP,IAAAA,EAAE,CAAC,IAAD,EAAOU,EAAP,CAAF;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AAEA,SAASE,IAAT,CAAeH,GAAf,EAAoB;AAClB,SAAO,UAAUI,CAAV,EAAa;AAClB,SAAKC,IAAL,CAAUL,GAAV;AACA,SAAKK,IAAL,CAAU,IAAV;AACAL,IAAAA,GAAG,GAAG,IAAN;AACD,GAJD;AAKD","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\nvar Readable = require('readable-stream');;\nvar dataUriToBuffer = require('data-uri-to-buffer');\nvar NotModifiedError = require('./notmodified');\nvar debug = require('debug')('get-uri:data');\n\n/**\n * Module exports.\n */\n\nmodule.exports = get;\n\n/**\n * Returns a Readable stream from a \"data:\" URI.\n *\n * @api protected\n */\n\nfunction get (parsed, opts, fn) {\n  var uri = parsed.href;\n  var cache = opts.cache;\n\n  // need to create a SHA1 hash of the URI string, for cacheability checks\n  // in future `getUri()` calls with the same data URI passed in.\n  var shasum = crypto.createHash('sha1');\n  shasum.update(uri);\n  var hash = shasum.digest('hex');\n  debug('generated SHA1 hash for \"data:\" URI: %o', hash);\n\n  // check if the cache is the same \"data:\" URI that was previously passed in.\n  if (cache && cache.hash == hash) {\n    debug('got matching cache SHA1 hash: %o', hash);\n    fn(new NotModifiedError());\n  } else {\n    debug('creating Readable stream from \"data:\" URI buffer');\n    var buf = dataUriToBuffer(uri, opts);\n    var rs = new Readable();\n    rs._read = read(buf);\n    buf = null;\n    rs.hash = hash;\n    fn(null, rs);\n  }\n}\n\n/**\n * Function that returns a Readable `_read` function implementation.\n *\n * @api private\n */\n\nfunction read (buf) {\n  return function (n) {\n    this.push(buf);\n    this.push(null);\n    buf = null;\n  };\n}\n"]},"metadata":{},"sourceType":"script"}