{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar shared = require('../shared');\n\nvar MimeNode = require('../mime-node');\n\nvar mimeFuncs = require('../mime-funcs');\n\nvar MailMessage = /*#__PURE__*/function () {\n  function MailMessage(mailer, data) {\n    var _this = this;\n\n    _classCallCheck(this, MailMessage);\n\n    this.mailer = mailer;\n    this.data = {};\n    this.message = null;\n    data = data || {};\n    var options = mailer.options || {};\n    var defaults = mailer._defaults || {};\n    Object.keys(data).forEach(function (key) {\n      _this.data[key] = data[key];\n    });\n    this.data.headers = this.data.headers || {}; // apply defaults\n\n    Object.keys(defaults).forEach(function (key) {\n      if (!(key in _this.data)) {\n        _this.data[key] = defaults[key];\n      } else if (key === 'headers') {\n        // headers is a special case. Allow setting individual default headers\n        Object.keys(defaults.headers).forEach(function (key) {\n          if (!(key in _this.data.headers)) {\n            _this.data.headers[key] = defaults.headers[key];\n          }\n        });\n      }\n    }); // force specific keys from transporter options\n\n    ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(function (key) {\n      if (key in options) {\n        _this.data[key] = options[key];\n      }\n    });\n  }\n\n  _createClass(MailMessage, [{\n    key: \"resolveContent\",\n    value: function resolveContent() {\n      return shared.resolveContent.apply(shared, arguments);\n    }\n  }, {\n    key: \"resolveAll\",\n    value: function resolveAll(callback) {\n      var _this2 = this;\n\n      var keys = [[this.data, 'html'], [this.data, 'text'], [this.data, 'watchHtml'], [this.data, 'amp'], [this.data, 'icalEvent']];\n\n      if (this.data.alternatives && this.data.alternatives.length) {\n        this.data.alternatives.forEach(function (alternative, i) {\n          keys.push([_this2.data.alternatives, i]);\n        });\n      }\n\n      if (this.data.attachments && this.data.attachments.length) {\n        this.data.attachments.forEach(function (attachment, i) {\n          if (!attachment.filename) {\n            attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n\n            if (attachment.filename.indexOf('.') < 0) {\n              attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n            }\n          }\n\n          if (!attachment.contentType) {\n            attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n          }\n\n          keys.push([_this2.data.attachments, i]);\n        });\n      }\n\n      var mimeNode = new MimeNode();\n      var addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n      addressKeys.forEach(function (address) {\n        var value;\n\n        if (_this2.message) {\n          value = [].concat(mimeNode._parseAddresses(_this2.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n        } else if (_this2.data[address]) {\n          value = [].concat(mimeNode._parseAddresses(_this2.data[address]) || []);\n        }\n\n        if (value && value.length) {\n          _this2.data[address] = value;\n        } else if (address in _this2.data) {\n          _this2.data[address] = null;\n        }\n      });\n      var singleKeys = ['from', 'sender', 'replyTo'];\n      singleKeys.forEach(function (address) {\n        if (_this2.data[address]) {\n          _this2.data[address] = _this2.data[address].shift();\n        }\n      });\n      var pos = 0;\n\n      var resolveNext = function resolveNext() {\n        if (pos >= keys.length) {\n          return callback(null, _this2.data);\n        }\n\n        var args = keys[pos++];\n\n        if (!args[0] || !args[0][args[1]]) {\n          return resolveNext();\n        }\n\n        shared.resolveContent.apply(shared, _toConsumableArray(args).concat([function (err, value) {\n          if (err) {\n            return callback(err);\n          }\n\n          var node = {\n            content: value\n          };\n\n          if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n            Object.keys(args[0][args[1]]).forEach(function (key) {\n              if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                node[key] = args[0][args[1]][key];\n              }\n            });\n          }\n\n          args[0][args[1]] = node;\n          resolveNext();\n        }]));\n      };\n\n      setImmediate(function () {\n        return resolveNext();\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(callback) {\n      var _this3 = this;\n\n      var envelope = this.data.envelope || this.message.getEnvelope();\n      var messageId = this.message.messageId();\n      this.resolveAll(function (err, data) {\n        if (err) {\n          return callback(err);\n        }\n\n        data.envelope = envelope;\n        data.messageId = messageId;\n        ['html', 'text', 'watchHtml', 'amp'].forEach(function (key) {\n          if (data[key] && data[key].content) {\n            if (typeof data[key].content === 'string') {\n              data[key] = data[key].content;\n            } else if (Buffer.isBuffer(data[key].content)) {\n              data[key] = data[key].content.toString();\n            }\n          }\n        });\n\n        if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n          data.icalEvent.content = data.icalEvent.content.toString('base64');\n          data.icalEvent.encoding = 'base64';\n        }\n\n        if (data.alternatives && data.alternatives.length) {\n          data.alternatives.forEach(function (alternative) {\n            if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n              alternative.content = alternative.content.toString('base64');\n              alternative.encoding = 'base64';\n            }\n          });\n        }\n\n        if (data.attachments && data.attachments.length) {\n          data.attachments.forEach(function (attachment) {\n            if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n              attachment.content = attachment.content.toString('base64');\n              attachment.encoding = 'base64';\n            }\n          });\n        }\n\n        data.normalizedHeaders = {};\n        Object.keys(data.headers || {}).forEach(function (key) {\n          var value = [].concat(data.headers[key] || []).shift();\n          value = value && value.value || value;\n\n          if (value) {\n            if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n              value = _this3.message._encodeHeaderValue(key, value);\n            }\n\n            data.normalizedHeaders[key] = value;\n          }\n        });\n\n        if (data.list && typeof data.list === 'object') {\n          var listHeaders = _this3._getListHeaders(data.list);\n\n          listHeaders.forEach(function (entry) {\n            data.normalizedHeaders[entry.key] = entry.value.map(function (val) {\n              return val && val.value || val;\n            }).join(', ');\n          });\n        }\n\n        if (data.references) {\n          data.normalizedHeaders.references = _this3.message._encodeHeaderValue('references', data.references);\n        }\n\n        if (data.inReplyTo) {\n          data.normalizedHeaders['in-reply-to'] = _this3.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n        }\n\n        return callback(null, data);\n      });\n    }\n  }, {\n    key: \"setMailerHeader\",\n    value: function setMailerHeader() {\n      if (!this.message || !this.data.xMailer) {\n        return;\n      }\n\n      this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n  }, {\n    key: \"setPriorityHeaders\",\n    value: function setPriorityHeaders() {\n      if (!this.message || !this.data.priority) {\n        return;\n      }\n\n      switch ((this.data.priority || '').toString().toLowerCase()) {\n        case 'high':\n          this.message.setHeader('X-Priority', '1 (Highest)');\n          this.message.setHeader('X-MSMail-Priority', 'High');\n          this.message.setHeader('Importance', 'High');\n          break;\n\n        case 'low':\n          this.message.setHeader('X-Priority', '5 (Lowest)');\n          this.message.setHeader('X-MSMail-Priority', 'Low');\n          this.message.setHeader('Importance', 'Low');\n          break;\n\n        default: // do not add anything, since all messages are 'Normal' by default\n\n      }\n    }\n  }, {\n    key: \"setListHeaders\",\n    value: function setListHeaders() {\n      var _this4 = this;\n\n      if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n        return;\n      } // add optional List-* headers\n\n\n      if (this.data.list && typeof this.data.list === 'object') {\n        this._getListHeaders(this.data.list).forEach(function (listHeader) {\n          listHeader.value.forEach(function (value) {\n            _this4.message.addHeader(listHeader.key, value);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_getListHeaders\",\n    value: function _getListHeaders(listData) {\n      var _this5 = this;\n\n      // make sure an url looks like <protocol:url>\n      return Object.keys(listData).map(function (key) {\n        return {\n          key: 'list-' + key.toLowerCase().trim(),\n          value: [].concat(listData[key] || []).map(function (value) {\n            return {\n              prepared: true,\n              foldLines: true,\n              value: [].concat(value || []).map(function (value) {\n                if (typeof value === 'string') {\n                  value = {\n                    url: value\n                  };\n                }\n\n                if (value && value.url) {\n                  if (key.toLowerCase().trim() === 'id') {\n                    // List-ID: \"comment\" <domain>\n                    var _comment = value.comment || '';\n\n                    if (mimeFuncs.isPlainText(_comment)) {\n                      _comment = '\"' + _comment + '\"';\n                    } else {\n                      _comment = mimeFuncs.encodeWord(_comment);\n                    }\n\n                    return (value.comment ? _comment + ' ' : '') + _this5._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                  } // List-*: <http://domain> (comment)\n\n\n                  var comment = value.comment || '';\n\n                  if (!mimeFuncs.isPlainText(comment)) {\n                    comment = mimeFuncs.encodeWord(comment);\n                  }\n\n                  return _this5._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                }\n\n                return '';\n              }).filter(function (value) {\n                return value;\n              }).join(', ')\n            };\n          })\n        };\n      });\n    }\n  }, {\n    key: \"_formatListUrl\",\n    value: function _formatListUrl(url) {\n      url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n\n      if (/^(https?|mailto|ftp):/.test(url)) {\n        return '<' + url + '>';\n      }\n\n      if (/^[^@]+@[^@]+$/.test(url)) {\n        return '<mailto:' + url + '>';\n      }\n\n      return '<http://' + url + '>';\n    }\n  }]);\n\n  return MailMessage;\n}();\n\nmodule.exports = MailMessage;","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/nodemailer/lib/mailer/mail-message.js"],"names":["shared","require","MimeNode","mimeFuncs","MailMessage","mailer","data","message","options","defaults","_defaults","Object","keys","forEach","key","headers","resolveContent","callback","alternatives","length","alternative","i","push","attachments","attachment","filename","path","href","split","pop","shift","indexOf","detectExtension","contentType","detectMimeType","mimeNode","addressKeys","address","value","concat","_parseAddresses","getHeader","singleKeys","pos","resolveNext","args","err","node","content","Buffer","isBuffer","includes","setImmediate","envelope","getEnvelope","messageId","resolveAll","toString","icalEvent","encoding","normalizedHeaders","_encodeHeaderValue","list","listHeaders","_getListHeaders","entry","map","val","join","references","inReplyTo","xMailer","setHeader","priority","toLowerCase","listHeader","addHeader","listData","trim","prepared","foldLines","url","comment","isPlainText","encodeWord","_formatListUrl","replace","filter","test","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;IAEMG,W;AACF,uBAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AAAA;;AAAA;;AACtB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,OAAL,GAAe,IAAf;AAEAD,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAIE,OAAO,GAAGH,MAAM,CAACG,OAAP,IAAkB,EAAhC;AACA,QAAIC,QAAQ,GAAGJ,MAAM,CAACK,SAAP,IAAoB,EAAnC;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,OAAlB,CAA0B,UAAAC,GAAG,EAAI;AAC7B,MAAA,KAAI,CAACR,IAAL,CAAUQ,GAAV,IAAiBR,IAAI,CAACQ,GAAD,CAArB;AACH,KAFD;AAIA,SAAKR,IAAL,CAAUS,OAAV,GAAoB,KAAKT,IAAL,CAAUS,OAAV,IAAqB,EAAzC,CAbsB,CAetB;;AACAJ,IAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,UAAAC,GAAG,EAAI;AACjC,UAAI,EAAEA,GAAG,IAAI,KAAI,CAACR,IAAd,CAAJ,EAAyB;AACrB,QAAA,KAAI,CAACA,IAAL,CAAUQ,GAAV,IAAiBL,QAAQ,CAACK,GAAD,CAAzB;AACH,OAFD,MAEO,IAAIA,GAAG,KAAK,SAAZ,EAAuB;AAC1B;AACAH,QAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACM,OAArB,EAA8BF,OAA9B,CAAsC,UAAAC,GAAG,EAAI;AACzC,cAAI,EAAEA,GAAG,IAAI,KAAI,CAACR,IAAL,CAAUS,OAAnB,CAAJ,EAAiC;AAC7B,YAAA,KAAI,CAACT,IAAL,CAAUS,OAAV,CAAkBD,GAAlB,IAAyBL,QAAQ,CAACM,OAAT,CAAiBD,GAAjB,CAAzB;AACH;AACJ,SAJD;AAKH;AACJ,KAXD,EAhBsB,CA6BtB;;AACA,KAAC,mBAAD,EAAsB,kBAAtB,EAA0C,oBAA1C,EAAgED,OAAhE,CAAwE,UAAAC,GAAG,EAAI;AAC3E,UAAIA,GAAG,IAAIN,OAAX,EAAoB;AAChB,QAAA,KAAI,CAACF,IAAL,CAAUQ,GAAV,IAAiBN,OAAO,CAACM,GAAD,CAAxB;AACH;AACJ,KAJD;AAKH;;;;qCAEuB;AACpB,aAAOd,MAAM,CAACgB,cAAP,OAAAhB,MAAM,YAAb;AACH;;;+BAEUiB,Q,EAAU;AAAA;;AACjB,UAAIL,IAAI,GAAG,CACP,CAAC,KAAKN,IAAN,EAAY,MAAZ,CADO,EAEP,CAAC,KAAKA,IAAN,EAAY,MAAZ,CAFO,EAGP,CAAC,KAAKA,IAAN,EAAY,WAAZ,CAHO,EAIP,CAAC,KAAKA,IAAN,EAAY,KAAZ,CAJO,EAKP,CAAC,KAAKA,IAAN,EAAY,WAAZ,CALO,CAAX;;AAQA,UAAI,KAAKA,IAAL,CAAUY,YAAV,IAA0B,KAAKZ,IAAL,CAAUY,YAAV,CAAuBC,MAArD,EAA6D;AACzD,aAAKb,IAAL,CAAUY,YAAV,CAAuBL,OAAvB,CAA+B,UAACO,WAAD,EAAcC,CAAd,EAAoB;AAC/CT,UAAAA,IAAI,CAACU,IAAL,CAAU,CAAC,MAAI,CAAChB,IAAL,CAAUY,YAAX,EAAyBG,CAAzB,CAAV;AACH,SAFD;AAGH;;AAED,UAAI,KAAKf,IAAL,CAAUiB,WAAV,IAAyB,KAAKjB,IAAL,CAAUiB,WAAV,CAAsBJ,MAAnD,EAA2D;AACvD,aAAKb,IAAL,CAAUiB,WAAV,CAAsBV,OAAtB,CAA8B,UAACW,UAAD,EAAaH,CAAb,EAAmB;AAC7C,cAAI,CAACG,UAAU,CAACC,QAAhB,EAA0B;AACtBD,YAAAA,UAAU,CAACC,QAAX,GAAsB,CAACD,UAAU,CAACE,IAAX,IAAmBF,UAAU,CAACG,IAA9B,IAAsC,EAAvC,EAA2CC,KAA3C,CAAiD,GAAjD,EAAsDC,GAAtD,GAA4DD,KAA5D,CAAkE,GAAlE,EAAuEE,KAAvE,MAAkF,iBAAiBT,CAAC,GAAG,CAArB,CAAxG;;AACA,gBAAIG,UAAU,CAACC,QAAX,CAAoBM,OAApB,CAA4B,GAA5B,IAAmC,CAAvC,EAA0C;AACtCP,cAAAA,UAAU,CAACC,QAAX,IAAuB,MAAMtB,SAAS,CAAC6B,eAAV,CAA0BR,UAAU,CAACS,WAArC,CAA7B;AACH;AACJ;;AAED,cAAI,CAACT,UAAU,CAACS,WAAhB,EAA6B;AACzBT,YAAAA,UAAU,CAACS,WAAX,GAAyB9B,SAAS,CAAC+B,cAAV,CAAyBV,UAAU,CAACC,QAAX,IAAuBD,UAAU,CAACE,IAAlC,IAA0CF,UAAU,CAACG,IAArD,IAA6D,KAAtF,CAAzB;AACH;;AAEDf,UAAAA,IAAI,CAACU,IAAL,CAAU,CAAC,MAAI,CAAChB,IAAL,CAAUiB,WAAX,EAAwBF,CAAxB,CAAV;AACH,SAbD;AAcH;;AAED,UAAIc,QAAQ,GAAG,IAAIjC,QAAJ,EAAf;AAEA,UAAIkC,WAAW,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EAA4B,QAA5B,EAAsC,SAAtC,CAAlB;AAEAA,MAAAA,WAAW,CAACvB,OAAZ,CAAoB,UAAAwB,OAAO,EAAI;AAC3B,YAAIC,KAAJ;;AACA,YAAI,MAAI,CAAC/B,OAAT,EAAkB;AACd+B,UAAAA,KAAK,GAAG,GAAGC,MAAH,CAAUJ,QAAQ,CAACK,eAAT,CAAyB,MAAI,CAACjC,OAAL,CAAakC,SAAb,CAAuBJ,OAAO,KAAK,SAAZ,GAAwB,UAAxB,GAAqCA,OAA5D,CAAzB,KAAkG,EAA5G,CAAR;AACH,SAFD,MAEO,IAAI,MAAI,CAAC/B,IAAL,CAAU+B,OAAV,CAAJ,EAAwB;AAC3BC,UAAAA,KAAK,GAAG,GAAGC,MAAH,CAAUJ,QAAQ,CAACK,eAAT,CAAyB,MAAI,CAAClC,IAAL,CAAU+B,OAAV,CAAzB,KAAgD,EAA1D,CAAR;AACH;;AACD,YAAIC,KAAK,IAAIA,KAAK,CAACnB,MAAnB,EAA2B;AACvB,UAAA,MAAI,CAACb,IAAL,CAAU+B,OAAV,IAAqBC,KAArB;AACH,SAFD,MAEO,IAAID,OAAO,IAAI,MAAI,CAAC/B,IAApB,EAA0B;AAC7B,UAAA,MAAI,CAACA,IAAL,CAAU+B,OAAV,IAAqB,IAArB;AACH;AACJ,OAZD;AAcA,UAAIK,UAAU,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,CAAjB;AACAA,MAAAA,UAAU,CAAC7B,OAAX,CAAmB,UAAAwB,OAAO,EAAI;AAC1B,YAAI,MAAI,CAAC/B,IAAL,CAAU+B,OAAV,CAAJ,EAAwB;AACpB,UAAA,MAAI,CAAC/B,IAAL,CAAU+B,OAAV,IAAqB,MAAI,CAAC/B,IAAL,CAAU+B,OAAV,EAAmBP,KAAnB,EAArB;AACH;AACJ,OAJD;AAMA,UAAIa,GAAG,GAAG,CAAV;;AACA,UAAIC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACpB,YAAID,GAAG,IAAI/B,IAAI,CAACO,MAAhB,EAAwB;AACpB,iBAAOF,QAAQ,CAAC,IAAD,EAAO,MAAI,CAACX,IAAZ,CAAf;AACH;;AACD,YAAIuC,IAAI,GAAGjC,IAAI,CAAC+B,GAAG,EAAJ,CAAf;;AACA,YAAI,CAACE,IAAI,CAAC,CAAD,CAAL,IAAY,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,CAAjB,EAAmC;AAC/B,iBAAOD,WAAW,EAAlB;AACH;;AACD5C,QAAAA,MAAM,CAACgB,cAAP,OAAAhB,MAAM,qBAAmB6C,IAAnB,UAAyB,UAACC,GAAD,EAAMR,KAAN,EAAgB;AAC3C,cAAIQ,GAAJ,EAAS;AACL,mBAAO7B,QAAQ,CAAC6B,GAAD,CAAf;AACH;;AAED,cAAIC,IAAI,GAAG;AACPC,YAAAA,OAAO,EAAEV;AADF,WAAX;;AAGA,cAAIO,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,KAAoB,OAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,CAAP,KAA4B,QAAhD,IAA4D,CAACI,MAAM,CAACC,QAAP,CAAgBL,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,CAAhB,CAAjE,EAAoG;AAChGlC,YAAAA,MAAM,CAACC,IAAP,CAAYiC,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,CAAZ,EAA8BhC,OAA9B,CAAsC,UAAAC,GAAG,EAAI;AACzC,kBAAI,EAAEA,GAAG,IAAIiC,IAAT,KAAkB,CAAC,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB,EAA4B,KAA5B,EAAmCI,QAAnC,CAA4CrC,GAA5C,CAAvB,EAAyE;AACrEiC,gBAAAA,IAAI,CAACjC,GAAD,CAAJ,GAAY+B,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,EAAiB/B,GAAjB,CAAZ;AACH;AACJ,aAJD;AAKH;;AAED+B,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAI,CAAC,CAAD,CAAZ,IAAmBE,IAAnB;AACAH,UAAAA,WAAW;AACd,SAlBK,GAAN;AAmBH,OA3BD;;AA6BAQ,MAAAA,YAAY,CAAC;AAAA,eAAMR,WAAW,EAAjB;AAAA,OAAD,CAAZ;AACH;;;8BAES3B,Q,EAAU;AAAA;;AAChB,UAAIoC,QAAQ,GAAG,KAAK/C,IAAL,CAAU+C,QAAV,IAAsB,KAAK9C,OAAL,CAAa+C,WAAb,EAArC;AACA,UAAIC,SAAS,GAAG,KAAKhD,OAAL,CAAagD,SAAb,EAAhB;AAEA,WAAKC,UAAL,CAAgB,UAACV,GAAD,EAAMxC,IAAN,EAAe;AAC3B,YAAIwC,GAAJ,EAAS;AACL,iBAAO7B,QAAQ,CAAC6B,GAAD,CAAf;AACH;;AAEDxC,QAAAA,IAAI,CAAC+C,QAAL,GAAgBA,QAAhB;AACA/C,QAAAA,IAAI,CAACiD,SAAL,GAAiBA,SAAjB;AAEA,SAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,KAA9B,EAAqC1C,OAArC,CAA6C,UAAAC,GAAG,EAAI;AAChD,cAAIR,IAAI,CAACQ,GAAD,CAAJ,IAAaR,IAAI,CAACQ,GAAD,CAAJ,CAAUkC,OAA3B,EAAoC;AAChC,gBAAI,OAAO1C,IAAI,CAACQ,GAAD,CAAJ,CAAUkC,OAAjB,KAA6B,QAAjC,EAA2C;AACvC1C,cAAAA,IAAI,CAACQ,GAAD,CAAJ,GAAYR,IAAI,CAACQ,GAAD,CAAJ,CAAUkC,OAAtB;AACH,aAFD,MAEO,IAAIC,MAAM,CAACC,QAAP,CAAgB5C,IAAI,CAACQ,GAAD,CAAJ,CAAUkC,OAA1B,CAAJ,EAAwC;AAC3C1C,cAAAA,IAAI,CAACQ,GAAD,CAAJ,GAAYR,IAAI,CAACQ,GAAD,CAAJ,CAAUkC,OAAV,CAAkBS,QAAlB,EAAZ;AACH;AACJ;AACJ,SARD;;AAUA,YAAInD,IAAI,CAACoD,SAAL,IAAkBT,MAAM,CAACC,QAAP,CAAgB5C,IAAI,CAACoD,SAAL,CAAeV,OAA/B,CAAtB,EAA+D;AAC3D1C,UAAAA,IAAI,CAACoD,SAAL,CAAeV,OAAf,GAAyB1C,IAAI,CAACoD,SAAL,CAAeV,OAAf,CAAuBS,QAAvB,CAAgC,QAAhC,CAAzB;AACAnD,UAAAA,IAAI,CAACoD,SAAL,CAAeC,QAAf,GAA0B,QAA1B;AACH;;AAED,YAAIrD,IAAI,CAACY,YAAL,IAAqBZ,IAAI,CAACY,YAAL,CAAkBC,MAA3C,EAAmD;AAC/Cb,UAAAA,IAAI,CAACY,YAAL,CAAkBL,OAAlB,CAA0B,UAAAO,WAAW,EAAI;AACrC,gBAAIA,WAAW,IAAIA,WAAW,CAAC4B,OAA3B,IAAsCC,MAAM,CAACC,QAAP,CAAgB9B,WAAW,CAAC4B,OAA5B,CAA1C,EAAgF;AAC5E5B,cAAAA,WAAW,CAAC4B,OAAZ,GAAsB5B,WAAW,CAAC4B,OAAZ,CAAoBS,QAApB,CAA6B,QAA7B,CAAtB;AACArC,cAAAA,WAAW,CAACuC,QAAZ,GAAuB,QAAvB;AACH;AACJ,WALD;AAMH;;AAED,YAAIrD,IAAI,CAACiB,WAAL,IAAoBjB,IAAI,CAACiB,WAAL,CAAiBJ,MAAzC,EAAiD;AAC7Cb,UAAAA,IAAI,CAACiB,WAAL,CAAiBV,OAAjB,CAAyB,UAAAW,UAAU,EAAI;AACnC,gBAAIA,UAAU,IAAIA,UAAU,CAACwB,OAAzB,IAAoCC,MAAM,CAACC,QAAP,CAAgB1B,UAAU,CAACwB,OAA3B,CAAxC,EAA6E;AACzExB,cAAAA,UAAU,CAACwB,OAAX,GAAqBxB,UAAU,CAACwB,OAAX,CAAmBS,QAAnB,CAA4B,QAA5B,CAArB;AACAjC,cAAAA,UAAU,CAACmC,QAAX,GAAsB,QAAtB;AACH;AACJ,WALD;AAMH;;AAEDrD,QAAAA,IAAI,CAACsD,iBAAL,GAAyB,EAAzB;AACAjD,QAAAA,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACS,OAAL,IAAgB,EAA5B,EAAgCF,OAAhC,CAAwC,UAAAC,GAAG,EAAI;AAC3C,cAAIwB,KAAK,GAAG,GAAGC,MAAH,CAAUjC,IAAI,CAACS,OAAL,CAAaD,GAAb,KAAqB,EAA/B,EAAmCgB,KAAnC,EAAZ;AACAQ,UAAAA,KAAK,GAAIA,KAAK,IAAIA,KAAK,CAACA,KAAhB,IAA0BA,KAAlC;;AACA,cAAIA,KAAJ,EAAW;AACP,gBAAI,CAAC,YAAD,EAAe,aAAf,EAA8B,YAA9B,EAA4C,YAA5C,EAA0Da,QAA1D,CAAmErC,GAAnE,CAAJ,EAA6E;AACzEwB,cAAAA,KAAK,GAAG,MAAI,CAAC/B,OAAL,CAAasD,kBAAb,CAAgC/C,GAAhC,EAAqCwB,KAArC,CAAR;AACH;;AACDhC,YAAAA,IAAI,CAACsD,iBAAL,CAAuB9C,GAAvB,IAA8BwB,KAA9B;AACH;AACJ,SATD;;AAWA,YAAIhC,IAAI,CAACwD,IAAL,IAAa,OAAOxD,IAAI,CAACwD,IAAZ,KAAqB,QAAtC,EAAgD;AAC5C,cAAIC,WAAW,GAAG,MAAI,CAACC,eAAL,CAAqB1D,IAAI,CAACwD,IAA1B,CAAlB;;AACAC,UAAAA,WAAW,CAAClD,OAAZ,CAAoB,UAAAoD,KAAK,EAAI;AACzB3D,YAAAA,IAAI,CAACsD,iBAAL,CAAuBK,KAAK,CAACnD,GAA7B,IAAoCmD,KAAK,CAAC3B,KAAN,CAAY4B,GAAZ,CAAgB,UAAAC,GAAG;AAAA,qBAAKA,GAAG,IAAIA,GAAG,CAAC7B,KAAZ,IAAsB6B,GAA1B;AAAA,aAAnB,EAAkDC,IAAlD,CAAuD,IAAvD,CAApC;AACH,WAFD;AAGH;;AAED,YAAI9D,IAAI,CAAC+D,UAAT,EAAqB;AACjB/D,UAAAA,IAAI,CAACsD,iBAAL,CAAuBS,UAAvB,GAAoC,MAAI,CAAC9D,OAAL,CAAasD,kBAAb,CAAgC,YAAhC,EAA8CvD,IAAI,CAAC+D,UAAnD,CAApC;AACH;;AAED,YAAI/D,IAAI,CAACgE,SAAT,EAAoB;AAChBhE,UAAAA,IAAI,CAACsD,iBAAL,CAAuB,aAAvB,IAAwC,MAAI,CAACrD,OAAL,CAAasD,kBAAb,CAAgC,aAAhC,EAA+CvD,IAAI,CAACgE,SAApD,CAAxC;AACH;;AAED,eAAOrD,QAAQ,CAAC,IAAD,EAAOX,IAAP,CAAf;AACH,OArED;AAsEH;;;sCAEiB;AACd,UAAI,CAAC,KAAKC,OAAN,IAAiB,CAAC,KAAKD,IAAL,CAAUiE,OAAhC,EAAyC;AACrC;AACH;;AACD,WAAKhE,OAAL,CAAaiE,SAAb,CAAuB,UAAvB,EAAmC,KAAKlE,IAAL,CAAUiE,OAA7C;AACH;;;yCAEoB;AACjB,UAAI,CAAC,KAAKhE,OAAN,IAAiB,CAAC,KAAKD,IAAL,CAAUmE,QAAhC,EAA0C;AACtC;AACH;;AACD,cAAQ,CAAC,KAAKnE,IAAL,CAAUmE,QAAV,IAAsB,EAAvB,EAA2BhB,QAA3B,GAAsCiB,WAAtC,EAAR;AACI,aAAK,MAAL;AACI,eAAKnE,OAAL,CAAaiE,SAAb,CAAuB,YAAvB,EAAqC,aAArC;AACA,eAAKjE,OAAL,CAAaiE,SAAb,CAAuB,mBAAvB,EAA4C,MAA5C;AACA,eAAKjE,OAAL,CAAaiE,SAAb,CAAuB,YAAvB,EAAqC,MAArC;AACA;;AACJ,aAAK,KAAL;AACI,eAAKjE,OAAL,CAAaiE,SAAb,CAAuB,YAAvB,EAAqC,YAArC;AACA,eAAKjE,OAAL,CAAaiE,SAAb,CAAuB,mBAAvB,EAA4C,KAA5C;AACA,eAAKjE,OAAL,CAAaiE,SAAb,CAAuB,YAAvB,EAAqC,KAArC;AACA;;AACJ,gBAXJ,CAYI;;AAZJ;AAcH;;;qCAEgB;AAAA;;AACb,UAAI,CAAC,KAAKjE,OAAN,IAAiB,CAAC,KAAKD,IAAL,CAAUwD,IAA5B,IAAoC,OAAO,KAAKxD,IAAL,CAAUwD,IAAjB,KAA0B,QAAlE,EAA4E;AACxE;AACH,OAHY,CAIb;;;AACA,UAAI,KAAKxD,IAAL,CAAUwD,IAAV,IAAkB,OAAO,KAAKxD,IAAL,CAAUwD,IAAjB,KAA0B,QAAhD,EAA0D;AACtD,aAAKE,eAAL,CAAqB,KAAK1D,IAAL,CAAUwD,IAA/B,EAAqCjD,OAArC,CAA6C,UAAA8D,UAAU,EAAI;AACvDA,UAAAA,UAAU,CAACrC,KAAX,CAAiBzB,OAAjB,CAAyB,UAAAyB,KAAK,EAAI;AAC9B,YAAA,MAAI,CAAC/B,OAAL,CAAaqE,SAAb,CAAuBD,UAAU,CAAC7D,GAAlC,EAAuCwB,KAAvC;AACH,WAFD;AAGH,SAJD;AAKH;AACJ;;;oCAEeuC,Q,EAAU;AAAA;;AACtB;AACA,aAAOlE,MAAM,CAACC,IAAP,CAAYiE,QAAZ,EAAsBX,GAAtB,CAA0B,UAAApD,GAAG;AAAA,eAAK;AACrCA,UAAAA,GAAG,EAAE,UAAUA,GAAG,CAAC4D,WAAJ,GAAkBI,IAAlB,EADsB;AAErCxC,UAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUsC,QAAQ,CAAC/D,GAAD,CAAR,IAAiB,EAA3B,EAA+BoD,GAA/B,CAAmC,UAAA5B,KAAK;AAAA,mBAAK;AAChDyC,cAAAA,QAAQ,EAAE,IADsC;AAEhDC,cAAAA,SAAS,EAAE,IAFqC;AAGhD1C,cAAAA,KAAK,EAAE,GACFC,MADE,CACKD,KAAK,IAAI,EADd,EAEF4B,GAFE,CAEE,UAAA5B,KAAK,EAAI;AACV,oBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,kBAAAA,KAAK,GAAG;AACJ2C,oBAAAA,GAAG,EAAE3C;AADD,mBAAR;AAGH;;AAED,oBAAIA,KAAK,IAAIA,KAAK,CAAC2C,GAAnB,EAAwB;AACpB,sBAAInE,GAAG,CAAC4D,WAAJ,GAAkBI,IAAlB,OAA6B,IAAjC,EAAuC;AACnC;AACA,wBAAII,QAAO,GAAG5C,KAAK,CAAC4C,OAAN,IAAiB,EAA/B;;AACA,wBAAI/E,SAAS,CAACgF,WAAV,CAAsBD,QAAtB,CAAJ,EAAoC;AAChCA,sBAAAA,QAAO,GAAG,MAAMA,QAAN,GAAgB,GAA1B;AACH,qBAFD,MAEO;AACHA,sBAAAA,QAAO,GAAG/E,SAAS,CAACiF,UAAV,CAAqBF,QAArB,CAAV;AACH;;AAED,2BAAO,CAAC5C,KAAK,CAAC4C,OAAN,GAAgBA,QAAO,GAAG,GAA1B,GAAgC,EAAjC,IAAuC,MAAI,CAACG,cAAL,CAAoB/C,KAAK,CAAC2C,GAA1B,EAA+BK,OAA/B,CAAuC,eAAvC,EAAwD,EAAxD,CAA9C;AACH,mBAXmB,CAapB;;;AACA,sBAAIJ,OAAO,GAAG5C,KAAK,CAAC4C,OAAN,IAAiB,EAA/B;;AACA,sBAAI,CAAC/E,SAAS,CAACgF,WAAV,CAAsBD,OAAtB,CAAL,EAAqC;AACjCA,oBAAAA,OAAO,GAAG/E,SAAS,CAACiF,UAAV,CAAqBF,OAArB,CAAV;AACH;;AAED,yBAAO,MAAI,CAACG,cAAL,CAAoB/C,KAAK,CAAC2C,GAA1B,KAAkC3C,KAAK,CAAC4C,OAAN,GAAgB,OAAOA,OAAP,GAAiB,GAAjC,GAAuC,EAAzE,CAAP;AACH;;AAED,uBAAO,EAAP;AACH,eAhCE,EAiCFK,MAjCE,CAiCK,UAAAjD,KAAK;AAAA,uBAAIA,KAAJ;AAAA,eAjCV,EAkCF8B,IAlCE,CAkCG,IAlCH;AAHyC,aAAL;AAAA,WAAxC;AAF8B,SAAL;AAAA,OAA7B,CAAP;AA0CH;;;mCAEca,G,EAAK;AAChBA,MAAAA,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,gBAAZ,EAA8B,EAA9B,CAAN;;AACA,UAAI,wBAAwBE,IAAxB,CAA6BP,GAA7B,CAAJ,EAAuC;AACnC,eAAO,MAAMA,GAAN,GAAY,GAAnB;AACH;;AACD,UAAI,gBAAgBO,IAAhB,CAAqBP,GAArB,CAAJ,EAA+B;AAC3B,eAAO,aAAaA,GAAb,GAAmB,GAA1B;AACH;;AAED,aAAO,aAAaA,GAAb,GAAmB,GAA1B;AACH;;;;;;AAGLQ,MAAM,CAACC,OAAP,GAAiBtF,WAAjB","sourcesContent":["'use strict';\n\nconst shared = require('../shared');\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\nclass MailMessage {\n    constructor(mailer, data) {\n        this.mailer = mailer;\n        this.data = {};\n        this.message = null;\n\n        data = data || {};\n        let options = mailer.options || {};\n        let defaults = mailer._defaults || {};\n\n        Object.keys(data).forEach(key => {\n            this.data[key] = data[key];\n        });\n\n        this.data.headers = this.data.headers || {};\n\n        // apply defaults\n        Object.keys(defaults).forEach(key => {\n            if (!(key in this.data)) {\n                this.data[key] = defaults[key];\n            } else if (key === 'headers') {\n                // headers is a special case. Allow setting individual default headers\n                Object.keys(defaults.headers).forEach(key => {\n                    if (!(key in this.data.headers)) {\n                        this.data.headers[key] = defaults.headers[key];\n                    }\n                });\n            }\n        });\n\n        // force specific keys from transporter options\n        ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(key => {\n            if (key in options) {\n                this.data[key] = options[key];\n            }\n        });\n    }\n\n    resolveContent(...args) {\n        return shared.resolveContent(...args);\n    }\n\n    resolveAll(callback) {\n        let keys = [\n            [this.data, 'html'],\n            [this.data, 'text'],\n            [this.data, 'watchHtml'],\n            [this.data, 'amp'],\n            [this.data, 'icalEvent']\n        ];\n\n        if (this.data.alternatives && this.data.alternatives.length) {\n            this.data.alternatives.forEach((alternative, i) => {\n                keys.push([this.data.alternatives, i]);\n            });\n        }\n\n        if (this.data.attachments && this.data.attachments.length) {\n            this.data.attachments.forEach((attachment, i) => {\n                if (!attachment.filename) {\n                    attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                    if (attachment.filename.indexOf('.') < 0) {\n                        attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n                    }\n                }\n\n                if (!attachment.contentType) {\n                    attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n                }\n\n                keys.push([this.data.attachments, i]);\n            });\n        }\n\n        let mimeNode = new MimeNode();\n\n        let addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n\n        addressKeys.forEach(address => {\n            let value;\n            if (this.message) {\n                value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n            } else if (this.data[address]) {\n                value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);\n            }\n            if (value && value.length) {\n                this.data[address] = value;\n            } else if (address in this.data) {\n                this.data[address] = null;\n            }\n        });\n\n        let singleKeys = ['from', 'sender', 'replyTo'];\n        singleKeys.forEach(address => {\n            if (this.data[address]) {\n                this.data[address] = this.data[address].shift();\n            }\n        });\n\n        let pos = 0;\n        let resolveNext = () => {\n            if (pos >= keys.length) {\n                return callback(null, this.data);\n            }\n            let args = keys[pos++];\n            if (!args[0] || !args[0][args[1]]) {\n                return resolveNext();\n            }\n            shared.resolveContent(...args, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                let node = {\n                    content: value\n                };\n                if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n                    Object.keys(args[0][args[1]]).forEach(key => {\n                        if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                            node[key] = args[0][args[1]][key];\n                        }\n                    });\n                }\n\n                args[0][args[1]] = node;\n                resolveNext();\n            });\n        };\n\n        setImmediate(() => resolveNext());\n    }\n\n    normalize(callback) {\n        let envelope = this.data.envelope || this.message.getEnvelope();\n        let messageId = this.message.messageId();\n\n        this.resolveAll((err, data) => {\n            if (err) {\n                return callback(err);\n            }\n\n            data.envelope = envelope;\n            data.messageId = messageId;\n\n            ['html', 'text', 'watchHtml', 'amp'].forEach(key => {\n                if (data[key] && data[key].content) {\n                    if (typeof data[key].content === 'string') {\n                        data[key] = data[key].content;\n                    } else if (Buffer.isBuffer(data[key].content)) {\n                        data[key] = data[key].content.toString();\n                    }\n                }\n            });\n\n            if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n                data.icalEvent.content = data.icalEvent.content.toString('base64');\n                data.icalEvent.encoding = 'base64';\n            }\n\n            if (data.alternatives && data.alternatives.length) {\n                data.alternatives.forEach(alternative => {\n                    if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n                        alternative.content = alternative.content.toString('base64');\n                        alternative.encoding = 'base64';\n                    }\n                });\n            }\n\n            if (data.attachments && data.attachments.length) {\n                data.attachments.forEach(attachment => {\n                    if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n                        attachment.content = attachment.content.toString('base64');\n                        attachment.encoding = 'base64';\n                    }\n                });\n            }\n\n            data.normalizedHeaders = {};\n            Object.keys(data.headers || {}).forEach(key => {\n                let value = [].concat(data.headers[key] || []).shift();\n                value = (value && value.value) || value;\n                if (value) {\n                    if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n                        value = this.message._encodeHeaderValue(key, value);\n                    }\n                    data.normalizedHeaders[key] = value;\n                }\n            });\n\n            if (data.list && typeof data.list === 'object') {\n                let listHeaders = this._getListHeaders(data.list);\n                listHeaders.forEach(entry => {\n                    data.normalizedHeaders[entry.key] = entry.value.map(val => (val && val.value) || val).join(', ');\n                });\n            }\n\n            if (data.references) {\n                data.normalizedHeaders.references = this.message._encodeHeaderValue('references', data.references);\n            }\n\n            if (data.inReplyTo) {\n                data.normalizedHeaders['in-reply-to'] = this.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n            }\n\n            return callback(null, data);\n        });\n    }\n\n    setMailerHeader() {\n        if (!this.message || !this.data.xMailer) {\n            return;\n        }\n        this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n\n    setPriorityHeaders() {\n        if (!this.message || !this.data.priority) {\n            return;\n        }\n        switch ((this.data.priority || '').toString().toLowerCase()) {\n            case 'high':\n                this.message.setHeader('X-Priority', '1 (Highest)');\n                this.message.setHeader('X-MSMail-Priority', 'High');\n                this.message.setHeader('Importance', 'High');\n                break;\n            case 'low':\n                this.message.setHeader('X-Priority', '5 (Lowest)');\n                this.message.setHeader('X-MSMail-Priority', 'Low');\n                this.message.setHeader('Importance', 'Low');\n                break;\n            default:\n            // do not add anything, since all messages are 'Normal' by default\n        }\n    }\n\n    setListHeaders() {\n        if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n            return;\n        }\n        // add optional List-* headers\n        if (this.data.list && typeof this.data.list === 'object') {\n            this._getListHeaders(this.data.list).forEach(listHeader => {\n                listHeader.value.forEach(value => {\n                    this.message.addHeader(listHeader.key, value);\n                });\n            });\n        }\n    }\n\n    _getListHeaders(listData) {\n        // make sure an url looks like <protocol:url>\n        return Object.keys(listData).map(key => ({\n            key: 'list-' + key.toLowerCase().trim(),\n            value: [].concat(listData[key] || []).map(value => ({\n                prepared: true,\n                foldLines: true,\n                value: []\n                    .concat(value || [])\n                    .map(value => {\n                        if (typeof value === 'string') {\n                            value = {\n                                url: value\n                            };\n                        }\n\n                        if (value && value.url) {\n                            if (key.toLowerCase().trim() === 'id') {\n                                // List-ID: \"comment\" <domain>\n                                let comment = value.comment || '';\n                                if (mimeFuncs.isPlainText(comment)) {\n                                    comment = '\"' + comment + '\"';\n                                } else {\n                                    comment = mimeFuncs.encodeWord(comment);\n                                }\n\n                                return (value.comment ? comment + ' ' : '') + this._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                            }\n\n                            // List-*: <http://domain> (comment)\n                            let comment = value.comment || '';\n                            if (!mimeFuncs.isPlainText(comment)) {\n                                comment = mimeFuncs.encodeWord(comment);\n                            }\n\n                            return this._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                        }\n\n                        return '';\n                    })\n                    .filter(value => value)\n                    .join(', ')\n            }))\n        }));\n    }\n\n    _formatListUrl(url) {\n        url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n        if (/^(https?|mailto|ftp):/.test(url)) {\n            return '<' + url + '>';\n        }\n        if (/^[^@]+@[^@]+$/.test(url)) {\n            return '<mailto:' + url + '>';\n        }\n\n        return '<http://' + url + '>';\n    }\n}\n\nmodule.exports = MailMessage;\n"]},"metadata":{},"sourceType":"script"}