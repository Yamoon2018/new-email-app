{"ast":null,"code":"/**\n * Module exports.\n */\nmodule.exports = shExpMatch;\n/**\n * Returns true if the string matches the specified shell\n * expression.\n *\n * Actually, currently the patterns are shell expressions,\n * not regular expressions.\n *\n * Examples:\n *\n * ``` js\n * shExpMatch(\"http://home.netscape.com/people/ari/index.html\", \"*\\/ari/*\")\n *   // is true.\n *\n * shExpMatch(\"http://home.netscape.com/people/montulli/index.html\", \"*\\/ari/*\")\n *   // is false.\n * ```\n *\n * @param {String} str is any string to compare (e.g. the URL, or the hostname).\n * @param {String} shexp is a shell expression to compare against.\n * @return {Boolean} true if the string matches the shell expression.\n */\n\nfunction shExpMatch(str, shexp) {\n  var re = toRegExp(shexp);\n  return re.test(str);\n}\n/**\n * Converts a \"shell expression\" to a JavaScript RegExp.\n *\n * @api private\n */\n\n\nfunction toRegExp(str) {\n  str = String(str).replace(/\\?/g, '.').replace(/\\*/g, '(.*)');\n  return new RegExp('^' + str + '$');\n}","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/pac-resolver/shExpMatch.js"],"names":["module","exports","shExpMatch","str","shexp","re","toRegExp","test","String","replace","RegExp"],"mappings":"AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,EAAE,GAAGC,QAAQ,CAACF,KAAD,CAAjB;AACA,SAAOC,EAAE,CAACE,IAAH,CAAQJ,GAAR,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AAEA,SAASG,QAAT,CAAmBH,GAAnB,EAAwB;AACtBA,EAAAA,GAAG,GAAGK,MAAM,CAACL,GAAD,CAAN,CACHM,OADG,CACK,KADL,EACY,GADZ,EAEHA,OAFG,CAEK,KAFL,EAEY,MAFZ,CAAN;AAGA,SAAO,IAAIC,MAAJ,CAAW,MAAMP,GAAN,GAAY,GAAvB,CAAP;AACD","sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = shExpMatch;\n\n/**\n * Returns true if the string matches the specified shell\n * expression.\n *\n * Actually, currently the patterns are shell expressions,\n * not regular expressions.\n *\n * Examples:\n *\n * ``` js\n * shExpMatch(\"http://home.netscape.com/people/ari/index.html\", \"*\\/ari/*\")\n *   // is true.\n *\n * shExpMatch(\"http://home.netscape.com/people/montulli/index.html\", \"*\\/ari/*\")\n *   // is false.\n * ```\n *\n * @param {String} str is any string to compare (e.g. the URL, or the hostname).\n * @param {String} shexp is a shell expression to compare against.\n * @return {Boolean} true if the string matches the shell expression.\n */\n\nfunction shExpMatch (str, shexp) {\n  var re = toRegExp(shexp);\n  return re.test(str);\n}\n\n/**\n * Converts a \"shell expression\" to a JavaScript RegExp.\n *\n * @api private\n */\n\nfunction toRegExp (str) {\n  str = String(str)\n    .replace(/\\?/g, '.')\n    .replace(/\\*/g, '(.*)');\n  return new RegExp('^' + str + '$');\n}\n"]},"metadata":{},"sourceType":"script"}