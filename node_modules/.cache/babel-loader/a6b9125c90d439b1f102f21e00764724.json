{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Transform = require('stream').Transform;\n\nvar LastNewline = /*#__PURE__*/function (_Transform) {\n  _inherits(LastNewline, _Transform);\n\n  var _super = _createSuper(LastNewline);\n\n  function LastNewline() {\n    var _this;\n\n    _classCallCheck(this, LastNewline);\n\n    _this = _super.call(this);\n    _this.lastByte = false;\n    return _this;\n  }\n\n  _createClass(LastNewline, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, done) {\n      if (chunk.length) {\n        this.lastByte = chunk[chunk.length - 1];\n      }\n\n      this.push(chunk);\n      done();\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush(done) {\n      if (this.lastByte === 0x0a) {\n        return done();\n      }\n\n      if (this.lastByte === 0x0d) {\n        this.push(Buffer.from('\\n'));\n        return done();\n      }\n\n      this.push(Buffer.from('\\r\\n'));\n      return done();\n    }\n  }]);\n\n  return LastNewline;\n}(Transform);\n\nmodule.exports = LastNewline;","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/nodemailer/lib/mime-node/last-newline.js"],"names":["Transform","require","LastNewline","lastByte","chunk","encoding","done","length","push","Buffer","from","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,SAApC;;IAEME,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,QAAL,GAAgB,KAAhB;AAFU;AAGb;;;;+BAEUC,K,EAAOC,Q,EAAUC,I,EAAM;AAC9B,UAAIF,KAAK,CAACG,MAAV,EAAkB;AACd,aAAKJ,QAAL,GAAgBC,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAArB;AACH;;AAED,WAAKC,IAAL,CAAUJ,KAAV;AACAE,MAAAA,IAAI;AACP;;;2BAEMA,I,EAAM;AACT,UAAI,KAAKH,QAAL,KAAkB,IAAtB,EAA4B;AACxB,eAAOG,IAAI,EAAX;AACH;;AACD,UAAI,KAAKH,QAAL,KAAkB,IAAtB,EAA4B;AACxB,aAAKK,IAAL,CAAUC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAV;AACA,eAAOJ,IAAI,EAAX;AACH;;AACD,WAAKE,IAAL,CAAUC,MAAM,CAACC,IAAP,CAAY,MAAZ,CAAV;AACA,aAAOJ,IAAI,EAAX;AACH;;;;EAzBqBN,S;;AA4B1BW,MAAM,CAACC,OAAP,GAAiBV,WAAjB","sourcesContent":["'use strict';\n\nconst Transform = require('stream').Transform;\n\nclass LastNewline extends Transform {\n    constructor() {\n        super();\n        this.lastByte = false;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (chunk.length) {\n            this.lastByte = chunk[chunk.length - 1];\n        }\n\n        this.push(chunk);\n        done();\n    }\n\n    _flush(done) {\n        if (this.lastByte === 0x0a) {\n            return done();\n        }\n        if (this.lastByte === 0x0d) {\n            this.push(Buffer.from('\\n'));\n            return done();\n        }\n        this.push(Buffer.from('\\r\\n'));\n        return done();\n    }\n}\n\nmodule.exports = LastNewline;\n"]},"metadata":{},"sourceType":"script"}