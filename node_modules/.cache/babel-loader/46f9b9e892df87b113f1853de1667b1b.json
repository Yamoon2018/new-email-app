{"ast":null,"code":"var _classCallCheck = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar inflection = require('inflection');\n\nvar pathProxy = require('path-proxy');\n\nvar promisifyCall = require('promisify-call');\n\nvar Builder = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Builder(baseObj, resources) {\n    _classCallCheck(this, Builder);\n\n    this.baseObj = baseObj;\n    this.resources = resources;\n  }\n\n  _createClass(Builder, [{\n    key: \"build\",\n    value: function build() {\n      var _this = this;\n\n      Object.keys(this.resources).forEach(function (key) {\n        // console.log('building ' + key);\n        _this.buildResource(_this.resources[key]);\n      });\n    }\n  }, {\n    key: \"buildResource\",\n    value: function buildResource(resource) {\n      resource.links.forEach(this.buildAction, this);\n    }\n  }, {\n    key: \"buildAction\",\n    value: function buildAction(action) {\n      var actionName = action.title;\n      var properties = action.properties;\n      var requiredProps = action.required; // HACKY special case for members bulk add and send MIME endpoints\n\n      var path = action.href.replace(/\\.json/gi, '').replace(/\\.mime/gi, '');\n      var constructor = pathProxy.pathProxy(this.baseObj, path);\n\n      function impl(data, fn) {\n        var requestPath = action.href;\n        var pathParams = action.href.match(/{[^}]+}/g) || [];\n\n        if (typeof data === 'function') {\n          fn = data;\n          data = undefined;\n        }\n\n        var err;\n\n        if (this.params.length !== pathParams.length) {\n          err = new Error(\"Invalid number of params in path (expected \".concat(pathParams.length, \", got \").concat(this.params.length, \").\"));\n          return fn(err);\n        }\n\n        this.params.forEach(function (param) {\n          requestPath = requestPath.replace(/{[^}]+}/, param);\n        }); // check required payload properties\n\n        if (requiredProps && requiredProps.length > 0) {\n          if (!data) {\n            err = new Error('Missing parameters.');\n          } else {\n            for (var i = 0; i < requiredProps.length; i++) {\n              var prop = requiredProps[i];\n\n              if (typeof data[prop] === 'undefined') {\n                err = new Error(\"Missing parameter '\".concat(prop, \"'\"));\n                break;\n              }\n            }\n          }\n        }\n\n        if (err) {\n          return fn(err);\n        } // check payload property types\n\n\n        for (var key in properties) {\n          if (data && data[key]) {\n            var type = properties[key].type;\n            var dataType = typeof data[key];\n\n            if (Array.isArray(data[key])) {\n              dataType = 'array';\n            }\n\n            if (Array.isArray(type)) {\n              if (type.indexOf(dataType) === -1) {\n                err = new Error(\"Invalid parameter type. \".concat(key, \" must be of type: \").concat(type, \".\"));\n                break;\n              }\n            } else if (dataType !== type) {\n              err = new Error(\"Invalid parameter type. \".concat(key, \" must be of type: \").concat(type, \".\"));\n              break;\n            }\n          }\n        }\n\n        if (err) {\n          return fn(err);\n        }\n\n        this.client = this.base;\n        return this.client.request(action.method, requestPath, data, fn);\n      }\n\n      function promisifed(data, fn) {\n        return promisifyCall(this, impl, data, fn);\n      }\n\n      constructor.prototype[getName(actionName)] = promisifed;\n    }\n  }]);\n\n  return Builder;\n}();\n\nfunction getName(name) {\n  name = name.toLowerCase();\n  name = inflection.dasherize(name).replace(/-/g, '_');\n  name = inflection.camelize(name, true);\n  return name;\n}\n\nfunction build(baseObj, resources) {\n  var b = new Builder(baseObj, resources);\n  b.build();\n}\n\nexports.build = build;","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/mailgun-js/lib/build.js"],"names":["inflection","require","pathProxy","promisifyCall","Builder","baseObj","resources","Object","keys","forEach","key","buildResource","resource","links","buildAction","action","actionName","title","properties","requiredProps","required","path","href","replace","constructor","impl","data","fn","requestPath","pathParams","match","undefined","err","params","length","Error","param","i","prop","type","dataType","Array","isArray","indexOf","client","base","request","method","promisifed","prototype","getName","name","toLowerCase","dasherize","camelize","build","b","exports"],"mappings":"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","sourcesContent":["const inflection = require('inflection')\nconst pathProxy = require('path-proxy')\nconst promisifyCall = require('promisify-call')\n\nclass Builder {\n  constructor (baseObj, resources) {\n    this.baseObj = baseObj\n    this.resources = resources\n  }\n\n  build () {\n    Object.keys(this.resources).forEach((key) => {\n      // console.log('building ' + key);\n      this.buildResource(this.resources[key])\n    })\n  }\n\n  buildResource (resource) {\n    resource.links.forEach(this.buildAction, this)\n  }\n\n  buildAction (action) {\n    const actionName = action.title\n    const properties = action.properties\n    const requiredProps = action.required\n\n    // HACKY special case for members bulk add and send MIME endpoints\n    const path = action.href.replace(/\\.json/gi, '').replace(/\\.mime/gi, '')\n    const constructor = pathProxy.pathProxy(this.baseObj, path)\n\n    function impl (data, fn) {\n      let requestPath = action.href\n      const pathParams = action.href.match(/{[^}]+}/g) || []\n\n      if (typeof data === 'function') {\n        fn = data\n        data = undefined\n      }\n\n      let err\n\n      if (this.params.length !== pathParams.length) {\n        err = new Error(`Invalid number of params in path (expected ${pathParams.length}, got ${this.params.length}).`)\n\n        return fn(err)\n      }\n\n      this.params.forEach((param) => {\n        requestPath = requestPath.replace(/{[^}]+}/, param)\n      })\n\n      // check required payload properties\n      if (requiredProps && requiredProps.length > 0) {\n        if (!data) {\n          err = new Error('Missing parameters.')\n        } else {\n          for (let i = 0; i < requiredProps.length; i++) {\n            const prop = requiredProps[i]\n\n            if (typeof data[prop] === 'undefined') {\n              err = new Error(`Missing parameter '${prop}'`)\n              break\n            }\n          }\n        }\n      }\n\n      if (err) {\n        return fn(err)\n      }\n\n      // check payload property types\n      for (const key in properties) {\n        if (data && data[key]) {\n          const type = properties[key].type\n\n          let dataType = typeof data[key]\n\n          if (Array.isArray(data[key])) {\n            dataType = 'array'\n          }\n\n          if (Array.isArray(type)) {\n            if (type.indexOf(dataType) === -1) {\n              err = new Error(`Invalid parameter type. ${key} must be of type: ${type}.`)\n              break\n            }\n          } else if (dataType !== type) {\n            err = new Error(`Invalid parameter type. ${key} must be of type: ${type}.`)\n            break\n          }\n        }\n      }\n\n      if (err) {\n        return fn(err)\n      }\n\n      this.client = this.base\n\n      return this.client.request(action.method, requestPath, data, fn)\n    }\n\n    function promisifed (data, fn) {\n      return promisifyCall(this, impl, data, fn)\n    }\n\n    constructor.prototype[getName(actionName)] = promisifed\n  }\n}\n\nfunction getName (name) {\n  name = name.toLowerCase()\n  name = inflection.dasherize(name).replace(/-/g, '_')\n  name = inflection.camelize(name, true)\n\n  return name\n}\n\nfunction build (baseObj, resources) {\n  const b = new Builder(baseObj, resources)\n\n  b.build()\n}\n\nexports.build = build\n"]},"metadata":{},"sourceType":"script"}