{"ast":null,"code":"'use strict';\n\nrequire('./patch-core');\n\nvar inherits = require('util').inherits;\n\nvar promisify = require('es6-promisify');\n\nvar EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\n\n\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this); // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n\n  this._promisifiedCallback = false;\n  var opts = _opts;\n\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  } // timeout for the socket to be returned from the callback\n\n\n  this.timeout = opts && opts.timeout || null;\n  this.options = opts;\n}\n\ninherits(Agent, EventEmitter);\n/**\n * Override this function in your subclass!\n */\n\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n};\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\n\n\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  var ownOpts = Object.assign({}, _opts); // Set default `host` for HTTP to localhost\n\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  } // Set default `port` for HTTP if none was explicitly specified\n\n\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  var opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection; // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n\n  req._last = true;\n  req.shouldKeepAlive = false; // Create the `stream.Duplex` instance\n\n  var timeout;\n  var timedOut = false;\n  var timeoutMs = this.timeout;\n  var freeSocket = this.freeSocket;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err); // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    var err = new Error('A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms');\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      var onfree = function onfree() {\n        freeSocket(socket, opts);\n      };\n\n      socket.on('free', onfree);\n      req.onSocket(socket);\n    } else {\n      var err = new Error('no Duplex stream was returned to agent-base for `' + req.method + ' ' + req.path + '`');\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\nAgent.prototype.freeSocket = function freeSocket(socket, opts) {\n  // TODO reuse sockets\n  socket.destroy();\n};","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/agent-base/index.js"],"names":["require","inherits","promisify","EventEmitter","module","exports","Agent","isAgent","v","addRequest","callback","_opts","call","_promisifiedCallback","opts","timeout","options","prototype","req","Error","ownOpts","Object","assign","host","port","secureEndpoint","path","agent","hostname","_defaultAgent","defaultPort","createConnection","_last","shouldKeepAlive","timedOut","timeoutMs","freeSocket","onerror","err","_hadError","emit","ontimeout","code","callbackError","clearTimeout","onsocket","socket","onfree","on","onSocket","method","length","setTimeout","Promise","resolve","then","reject","catch","destroy"],"mappings":"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","sourcesContent":["'use strict';\nrequire('./patch-core');\nconst inherits = require('util').inherits;\nconst promisify = require('es6-promisify');\nconst EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n  this._promisifiedCallback = false;\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // Set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // Set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // Create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n  const freeSocket = this.freeSocket;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      function onfree() {\n        freeSocket(socket, opts);\n      }\n      socket.on('free', onfree);\n      req.onSocket(socket);\n    } else {\n      const err = new Error(\n        'no Duplex stream was returned to agent-base for `' + req.method + ' ' + req.path + '`'\n      );\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\nAgent.prototype.freeSocket = function freeSocket(socket, opts) {\n  // TODO reuse sockets\n  socket.destroy();\n};\n"]},"metadata":{},"sourceType":"script"}