{"ast":null,"code":"var _classCallCheck = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/yamin/My_repos/new-email-app/new-email-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar https = require('https');\n\nvar http = require('http');\n\nvar ProxyAgent = require('proxy-agent');\n\nvar qs = require('querystring');\n\nvar fs = require('fs');\n\nvar Readable = require('stream').Readable;\n\nvar FormData = require('form-data');\n\nvar Attachment = require('./attachment');\n\nvar retry = require('async').retry;\n\nvar promisifyCall = require('promisify-call');\n\nvar debug = require('debug')('mailgun-js');\n\nfunction isOk(i) {\n  return typeof i !== 'undefined' && i !== null;\n}\n\nfunction getDataValue(key, input) {\n  if (isSpecialParam(key) && typeof input === 'object') {\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return input.toString();\n  }\n\n  return input;\n}\n\nfunction isSpecialParam(paramKey) {\n  var key = paramKey.toLowerCase();\n  return key === 'vars' || key === 'members' || key === 'recipient-variables' || key.indexOf('v:') === 0;\n}\n\nfunction isMultiUnsubsribe(path, data) {\n  return path.indexOf('/unsubscribes') && data && Array.isArray(data);\n}\n\nfunction prepareData(data) {\n  var params = {};\n\n  for (var key in data) {\n    if (key !== 'attachment' && key !== 'inline' && isOk(data[key])) {\n      var value = getDataValue(key, data[key]);\n\n      if (isOk(value)) {\n        params[key] = value;\n      }\n    } else {\n      params[key] = data[key];\n    }\n  }\n\n  return params;\n}\n\nvar Request = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Request(options) {\n    _classCallCheck(this, Request);\n\n    this.host = options.host;\n    this.protocol = options.protocol;\n    this.port = options.port;\n    this.endpoint = options.endpoint;\n    this.auth = options.auth;\n    this.proxy = options.proxy;\n    this.timeout = options.timeout;\n    this.retry = options.retry || 1;\n    this.testMode = options.testMode;\n    this.testModeLogger = typeof options.testModeLogger === 'function' ? options.testModeLogger : this.defaultTestModeLogger;\n  }\n\n  _createClass(Request, [{\n    key: \"_request\",\n    value: function _request(method, resource, data, fn) {\n      var _this = this;\n\n      var path = ''.concat(this.endpoint, resource);\n      var params = prepareData(data);\n      this.payload = '';\n      var isMIME = path.indexOf('/messages.mime') >= 0;\n      this.headers = {};\n\n      if (method === 'GET' || method === 'DELETE') {\n        this.payload = qs.stringify(params);\n        if (this.payload) path = path.concat('?', this.payload);\n      } else {\n        if (isMIME) {\n          this.headers['Content-Type'] = 'multipart/form-data';\n        } else if (method === 'POST' && isMultiUnsubsribe(path, data)) {\n          this.headers['Content-Type'] = 'application/json';\n        } else {\n          this.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n\n        if (params && (params.attachment || params.inline || isMIME && params.message)) {\n          this.prepareFormData(params);\n        } else {\n          if (method === 'POST' && isMultiUnsubsribe(path, data)) {\n            this.payload = JSON.stringify(data);\n          } else {\n            this.payload = qs.stringify(params);\n          }\n\n          if (this.payload) {\n            this.headers['Content-Length'] = Buffer.byteLength(this.payload);\n          } else {\n            this.headers['Content-Length'] = 0;\n          }\n        }\n      } // check for MIME is true in case of messages GET\n\n\n      if (method === 'GET' && path.indexOf('/messages') >= 0 && params && params.MIME === true) {\n        this.headers.Accept = 'message/rfc2822';\n      }\n\n      debug('%s %s', method, path);\n      var opts = {\n        'hostname': this.host,\n        'port': this.port,\n        'protocol': this.protocol,\n        path: path,\n        method: method,\n        'headers': this.headers,\n        'auth': this.auth,\n        'agent': false,\n        'timeout': this.timeout\n      };\n\n      if (this.proxy) {\n        opts.agent = new ProxyAgent(this.proxy);\n      }\n\n      if (this.testMode) {\n        this.testModeLogger(opts, this.payload, this.form);\n        return fn();\n      }\n\n      if (typeof this.retry === 'object' || this.retry > 1) {\n        retry(this.retry, function (retryCb) {\n          _this.callback = retryCb;\n\n          _this.performRequest(opts);\n        }, fn);\n      } else {\n        this.callback = fn;\n        this.performRequest(opts);\n      }\n    }\n  }, {\n    key: \"request\",\n    value: function request(method, resource, data, fn) {\n      if (typeof data === 'function' && !fn) {\n        fn = data;\n        data = {};\n      }\n\n      if (!data) {\n        data = {};\n      }\n\n      return promisifyCall(this, this._request, method, resource, data, fn);\n    }\n  }, {\n    key: \"prepareFormData\",\n    value: function prepareFormData(data) {\n      var _this2 = this;\n\n      this.form = new FormData();\n\n      var _loop = function _loop(key) {\n        if ({}.hasOwnProperty.call(data, key)) {\n          var obj = data[key];\n\n          if (isOk(obj)) {\n            if (key === 'attachment' || key === 'inline') {\n              if (Array.isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  _this2.handleAttachmentObject(key, obj[i]);\n                }\n              } else {\n                _this2.handleAttachmentObject(key, obj);\n              }\n            } else if (key === 'message') {\n              _this2.handleMimeObject(key, obj);\n            } else if (Array.isArray(obj)) {\n              obj.forEach(function (element) {\n                if (isOk(element)) {\n                  var value = getDataValue(key, element);\n\n                  if (isOk(value)) {\n                    _this2.form.append(key, value);\n                  }\n                }\n              });\n            } else {\n              var value = getDataValue(key, obj);\n\n              if (isOk(value)) {\n                _this2.form.append(key, value);\n              }\n            }\n          }\n        }\n      };\n\n      for (var key in data) {\n        _loop(key);\n      }\n\n      this.headers = this.form.getHeaders();\n    }\n  }, {\n    key: \"handleMimeObject\",\n    value: function handleMimeObject(key, obj) {\n      if (typeof obj === 'string') {\n        if (fs.existsSync(obj) && fs.statSync(obj).isFile()) {\n          this.form.append('message', fs.createReadStream(obj));\n        } else {\n          this.form.append('message', Buffer.from(obj), {\n            'filename': 'message.mime',\n            'contentType': 'message/rfc822',\n            'knownLength': obj.length\n          });\n        }\n      } else if (obj instanceof Readable) {\n        this.form.append('message', obj);\n      }\n    }\n  }, {\n    key: \"handleAttachmentObject\",\n    value: function handleAttachmentObject(key, obj) {\n      if (!this.form) this.form = new FormData();\n\n      if (Buffer.isBuffer(obj)) {\n        debug('appending buffer to form data. key: %s', key);\n        this.form.append(key, obj, {\n          'filename': 'file'\n        });\n      } else if (typeof obj === 'string') {\n        debug('appending stream to form data. key: %s obj: %s', key, obj);\n        this.form.append(key, fs.createReadStream(obj));\n      } else if (typeof obj === 'object' && obj.readable === true) {\n        debug('appending readable stream to form data. key: %s obj: %s', key, obj);\n        this.form.append(key, obj);\n      } else if (typeof obj === 'object' && obj instanceof Attachment) {\n        var attachmentType = obj.getType();\n\n        if (attachmentType === 'path') {\n          debug('appending attachment stream to form data. key: %s data: %s filename: %s', key, obj.data, obj.filename);\n          this.form.append(key, fs.createReadStream(obj.data), {\n            'filename': obj.filename || 'attached file'\n          });\n        } else if (attachmentType === 'buffer') {\n          debug('appending attachment buffer to form data. key: %s filename: %s', key, obj.filename);\n          var formOpts = {\n            'filename': obj.filename || 'attached file'\n          };\n\n          if (obj.contentType) {\n            formOpts.contentType = obj.contentType;\n          }\n\n          if (obj.knownLength) {\n            formOpts.knownLength = obj.knownLength;\n          }\n\n          this.form.append(key, obj.data, formOpts);\n        } else if (attachmentType === 'stream') {\n          if (obj.knownLength && !obj.contentType || !obj.knownLength && obj.contentType) {\n            debug('missing content type or length for attachment stream. key: %s', key);\n          } else {\n            debug('appending attachment stream to form data. key: %s', key); // add all known options\n\n            var _formOpts = {};\n\n            if (obj.filename) {\n              _formOpts.filename = obj.filename;\n            }\n\n            if (obj.contentType) {\n              _formOpts.contentType = obj.contentType;\n            }\n\n            if (obj.knownLength) {\n              _formOpts.knownLength = obj.knownLength;\n            }\n\n            this.form.append(key, obj.data, _formOpts);\n          }\n        }\n      } else {\n        debug('unknown attachment type. key: %s', key);\n      }\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(res) {\n      var _this3 = this;\n\n      var chunks = '';\n      var error;\n      res.on('data', function (chunk) {\n        chunks += chunk;\n      });\n      res.on('error', function (err) {\n        error = err;\n      });\n      res.on('end', function () {\n        var body;\n        debug('response status code: %s content type: %s error: %s', res.statusCode, res.headers['content-type'], error); // FIXME: An ugly hack to overcome invalid response type in mailgun api (see http://bit.ly/1eF30fU).\n        // We skip content-type validation for 'campaings' endpoint assuming it is JSON.\n\n        var skipContentTypeCheck = res.req && res.req.path && res.req.path.match(/\\/campaigns/);\n        var isJSON = res.headers['content-type'] && res.headers['content-type'].indexOf('application/json') >= 0;\n\n        if (chunks && !error && (skipContentTypeCheck || isJSON)) {\n          try {\n            body = JSON.parse(chunks);\n          } catch (e) {\n            error = e;\n          }\n        }\n\n        if (process.env.DEBUG_MAILGUN_FORCE_RETRY) {\n          error = new Error('Force retry error');\n          delete process.env.DEBUG_MAILGUN_FORCE_RETRY;\n        }\n\n        if (!error && res.statusCode !== 200) {\n          var msg = body || chunks || res.statusMessage;\n\n          if (body) {\n            msg = body.message || body.response;\n          }\n\n          error = new Error(msg);\n          error.statusCode = res.statusCode;\n        }\n\n        return _this3.callback(error, body);\n      });\n    }\n  }, {\n    key: \"performRequest\",\n    value: function performRequest(options) {\n      var _this4 = this;\n\n      var method = options.method;\n\n      if (this.form && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {\n        var alreadyHandled = false;\n        this.form.submit(options, function (err, res) {\n          if (alreadyHandled) {\n            return;\n          }\n\n          alreadyHandled = true;\n\n          if (err) {\n            return _this4.callback(err);\n          }\n\n          return _this4.handleResponse(res);\n        });\n      } else {\n        var req;\n\n        if (options.protocol === 'http:') {\n          req = http.request(options, function (res) {\n            return _this4.handleResponse(res);\n          });\n        } else {\n          req = https.request(options, function (res) {\n            return _this4.handleResponse(res);\n          });\n        }\n\n        if (options.timeout) {\n          req.setTimeout(options.timeout, function () {\n            // timeout occurs\n            req.abort();\n          });\n        }\n\n        req.on('error', function (e) {\n          return _this4.callback(e);\n        });\n\n        if (this.payload && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {\n          req.write(this.payload);\n        }\n\n        req.end();\n      }\n    }\n  }, {\n    key: \"defaultTestModeLogger\",\n    value: function defaultTestModeLogger(httpOptions, payload, formData) {\n      var testlog = debug.enabled ? debug : console.log;\n      testlog('options: %o', httpOptions);\n      testlog('payload: %o', payload);\n      testlog('form: %o', formData);\n    }\n  }]);\n\n  return Request;\n}();\n\nmodule.exports = Request;","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/mailgun-js/lib/request.js"],"names":["https","require","http","ProxyAgent","qs","fs","Readable","FormData","Attachment","retry","promisifyCall","debug","isOk","i","getDataValue","key","input","isSpecialParam","JSON","stringify","toString","paramKey","toLowerCase","indexOf","isMultiUnsubsribe","path","data","Array","isArray","prepareData","params","value","Request","options","host","protocol","port","endpoint","auth","proxy","timeout","testMode","testModeLogger","defaultTestModeLogger","method","resource","fn","concat","payload","isMIME","headers","attachment","inline","message","prepareFormData","Buffer","byteLength","MIME","Accept","opts","agent","form","retryCb","callback","performRequest","_request","hasOwnProperty","call","obj","length","handleAttachmentObject","handleMimeObject","forEach","element","append","getHeaders","existsSync","statSync","isFile","createReadStream","from","isBuffer","readable","attachmentType","getType","filename","formOpts","contentType","knownLength","res","chunks","error","on","chunk","err","body","statusCode","skipContentTypeCheck","req","match","isJSON","parse","e","process","env","DEBUG_MAILGUN_FORCE_RETRY","Error","msg","statusMessage","response","alreadyHandled","submit","handleResponse","request","setTimeout","abort","write","end","httpOptions","formData","testlog","enabled","console","log","module","exports"],"mappings":"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","sourcesContent":["const https = require('https')\nconst http = require('http')\nconst ProxyAgent = require('proxy-agent')\nconst qs = require('querystring')\nconst fs = require('fs')\nconst Readable = require('stream').Readable\nconst FormData = require('form-data')\nconst Attachment = require('./attachment')\nconst retry = require('async').retry\nconst promisifyCall = require('promisify-call')\n\nconst debug = require('debug')('mailgun-js')\n\nfunction isOk (i) {\n  return typeof i !== 'undefined' && i !== null\n}\n\nfunction getDataValue (key, input) {\n  if (isSpecialParam(key) && (typeof input === 'object')) {\n    return JSON.stringify(input)\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return input.toString()\n  }\n\n  return input\n}\n\nfunction isSpecialParam (paramKey) {\n  const key = paramKey.toLowerCase()\n\n  return ((key === 'vars' || key === 'members' || key === 'recipient-variables') || (key.indexOf('v:') === 0))\n}\n\nfunction isMultiUnsubsribe (path, data) {\n  return path.indexOf('/unsubscribes') && data && Array.isArray(data)\n}\n\nfunction prepareData (data) {\n  const params = {}\n\n  for (const key in data) {\n    if (key !== 'attachment' && key !== 'inline' && isOk(data[key])) {\n      const value = getDataValue(key, data[key])\n\n      if (isOk(value)) {\n        params[key] = value\n      }\n    } else {\n      params[key] = data[key]\n    }\n  }\n\n  return params\n}\n\nclass Request {\n  constructor (options) {\n    this.host = options.host\n    this.protocol = options.protocol\n    this.port = options.port\n    this.endpoint = options.endpoint\n    this.auth = options.auth\n    this.proxy = options.proxy\n    this.timeout = options.timeout\n    this.retry = options.retry || 1\n    this.testMode = options.testMode\n    this.testModeLogger = typeof options.testModeLogger === 'function'\n      ? options.testModeLogger : this.defaultTestModeLogger\n  }\n\n  _request (method, resource, data, fn) {\n    let path = ''.concat(this.endpoint, resource)\n\n    const params = prepareData(data)\n\n    this.payload = ''\n\n    const isMIME = path.indexOf('/messages.mime') >= 0\n\n    this.headers = {}\n    if (method === 'GET' || method === 'DELETE') {\n      this.payload = qs.stringify(params)\n      if (this.payload) path = path.concat('?', this.payload)\n    } else {\n      if (isMIME) {\n        this.headers['Content-Type'] = 'multipart/form-data'\n      } else if (method === 'POST' && isMultiUnsubsribe(path, data)) {\n        this.headers['Content-Type'] = 'application/json'\n      } else {\n        this.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n      }\n\n      if (params && (params.attachment || params.inline || (isMIME && params.message))) {\n        this.prepareFormData(params)\n      } else {\n        if (method === 'POST' && isMultiUnsubsribe(path, data)) {\n          this.payload = JSON.stringify(data)\n        } else {\n          this.payload = qs.stringify(params)\n        }\n\n        if (this.payload) {\n          this.headers['Content-Length'] = Buffer.byteLength(this.payload)\n        } else {\n          this.headers['Content-Length'] = 0\n        }\n      }\n    }\n\n    // check for MIME is true in case of messages GET\n    if (method === 'GET' &&\n      path.indexOf('/messages') >= 0 &&\n      params && params.MIME === true) {\n      this.headers.Accept = 'message/rfc2822'\n    }\n\n    debug('%s %s', method, path)\n\n    const opts = {\n      'hostname': this.host,\n      'port': this.port,\n      'protocol': this.protocol,\n      path,\n      method,\n      'headers': this.headers,\n      'auth': this.auth,\n      'agent': false,\n      'timeout': this.timeout\n    }\n\n    if (this.proxy) {\n      opts.agent = new ProxyAgent(this.proxy)\n    }\n\n    if (this.testMode) {\n      this.testModeLogger(opts, this.payload, this.form)\n      return fn()\n    }\n\n    if (typeof this.retry === 'object' || this.retry > 1) {\n      retry(this.retry, (retryCb) => {\n        this.callback = retryCb\n        this.performRequest(opts)\n      }, fn)\n    } else {\n      this.callback = fn\n      this.performRequest(opts)\n    }\n  }\n\n  request (method, resource, data, fn) {\n    if (typeof data === 'function' && !fn) {\n      fn = data\n      data = {}\n    }\n\n    if (!data) {\n      data = {}\n    }\n\n    return promisifyCall(this, this._request, method, resource, data, fn)\n  }\n\n  prepareFormData (data) {\n    this.form = new FormData()\n\n    for (const key in data) {\n      if ({}.hasOwnProperty.call(data, key)) {\n        const obj = data[key]\n\n        if (isOk(obj)) {\n          if (key === 'attachment' || key === 'inline') {\n            if (Array.isArray(obj)) {\n              for (let i = 0; i < obj.length; i++) {\n                this.handleAttachmentObject(key, obj[i])\n              }\n            } else {\n              this.handleAttachmentObject(key, obj)\n            }\n          } else if (key === 'message') {\n            this.handleMimeObject(key, obj)\n          } else if (Array.isArray(obj)) {\n            obj.forEach((element) => {\n              if (isOk(element)) {\n                const value = getDataValue(key, element)\n\n                if (isOk(value)) {\n                  this.form.append(key, value)\n                }\n              }\n            })\n          } else {\n            const value = getDataValue(key, obj)\n\n            if (isOk(value)) {\n              this.form.append(key, value)\n            }\n          }\n        }\n      }\n    }\n\n    this.headers = this.form.getHeaders()\n  }\n\n  handleMimeObject (key, obj) {\n    if (typeof obj === 'string') {\n      if (fs.existsSync(obj) && fs.statSync(obj).isFile()) {\n        this.form.append('message', fs.createReadStream(obj))\n      } else {\n        this.form.append('message', Buffer.from(obj), {\n          'filename': 'message.mime',\n          'contentType': 'message/rfc822',\n          'knownLength': obj.length\n        })\n      }\n    } else if (obj instanceof Readable) {\n      this.form.append('message', obj)\n    }\n  }\n\n  handleAttachmentObject (key, obj) {\n    if (!this.form) this.form = new FormData()\n\n    if (Buffer.isBuffer(obj)) {\n      debug('appending buffer to form data. key: %s', key)\n      this.form.append(key, obj, {\n        'filename': 'file'\n      })\n    } else if (typeof obj === 'string') {\n      debug('appending stream to form data. key: %s obj: %s', key, obj)\n      this.form.append(key, fs.createReadStream(obj))\n    } else if ((typeof obj === 'object') && (obj.readable === true)) {\n      debug('appending readable stream to form data. key: %s obj: %s', key, obj)\n      this.form.append(key, obj)\n    } else if ((typeof obj === 'object') && (obj instanceof Attachment)) {\n      const attachmentType = obj.getType()\n\n      if (attachmentType === 'path') {\n        debug('appending attachment stream to form data. key: %s data: %s filename: %s', key, obj.data, obj.filename)\n        this.form.append(key, fs.createReadStream(obj.data), {\n          'filename': obj.filename || 'attached file'\n        })\n      } else if (attachmentType === 'buffer') {\n        debug('appending attachment buffer to form data. key: %s filename: %s', key, obj.filename)\n        const formOpts = {\n          'filename': obj.filename || 'attached file'\n        }\n\n        if (obj.contentType) {\n          formOpts.contentType = obj.contentType\n        }\n\n        if (obj.knownLength) {\n          formOpts.knownLength = obj.knownLength\n        }\n\n        this.form.append(key, obj.data, formOpts)\n      } else if (attachmentType === 'stream') {\n        if ((obj.knownLength && !obj.contentType) || (!obj.knownLength && obj.contentType)) {\n          debug('missing content type or length for attachment stream. key: %s', key)\n        } else {\n          debug('appending attachment stream to form data. key: %s', key)\n\n          // add all known options\n          let formOpts = {}\n          if (obj.filename) {\n            formOpts.filename = obj.filename\n          }\n          if (obj.contentType) {\n            formOpts.contentType = obj.contentType\n          }\n          if (obj.knownLength) {\n            formOpts.knownLength = obj.knownLength\n          }\n\n          this.form.append(key, obj.data, formOpts)\n        }\n      }\n    } else {\n      debug('unknown attachment type. key: %s', key)\n    }\n  }\n\n  handleResponse (res) {\n    let chunks = ''\n    let error\n\n    res.on('data', (chunk) => {\n      chunks += chunk\n    })\n\n    res.on('error', (err) => {\n      error = err\n    })\n\n    res.on('end', () => {\n      let body\n\n      debug('response status code: %s content type: %s error: %s', res.statusCode, res.headers['content-type'], error)\n\n      // FIXME: An ugly hack to overcome invalid response type in mailgun api (see http://bit.ly/1eF30fU).\n      // We skip content-type validation for 'campaings' endpoint assuming it is JSON.\n      const skipContentTypeCheck = res.req && res.req.path && res.req.path.match(/\\/campaigns/)\n      const isJSON = res.headers['content-type'] && res.headers['content-type'].indexOf('application/json') >= 0\n\n      if (chunks && !error && (skipContentTypeCheck || isJSON)) {\n        try {\n          body = JSON.parse(chunks)\n        } catch (e) {\n          error = e\n        }\n      }\n\n      if (process.env.DEBUG_MAILGUN_FORCE_RETRY) {\n        error = new Error('Force retry error')\n        delete process.env.DEBUG_MAILGUN_FORCE_RETRY\n      }\n\n      if (!error && res.statusCode !== 200) {\n        let msg = body || chunks || res.statusMessage\n\n        if (body) {\n          msg = body.message || body.response\n        }\n\n        error = new Error(msg)\n        error.statusCode = res.statusCode\n      }\n\n      return this.callback(error, body)\n    })\n  }\n\n  performRequest (options) {\n    const method = options.method\n\n    if (this.form && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {\n      let alreadyHandled = false\n      this.form.submit(options, (err, res) => {\n        if (alreadyHandled) {\n          return\n        }\n        alreadyHandled = true\n\n        if (err) {\n          return this.callback(err)\n        }\n\n        return this.handleResponse(res)\n      })\n    } else {\n      let req\n\n      if (options.protocol === 'http:') {\n        req = http.request(options, (res) => {\n          return this.handleResponse(res)\n        })\n      } else {\n        req = https.request(options, (res) => {\n          return this.handleResponse(res)\n        })\n      }\n\n      if (options.timeout) {\n        req.setTimeout(options.timeout, () => {\n          // timeout occurs\n          req.abort()\n        })\n      }\n\n      req.on('error', (e) => {\n        return this.callback(e)\n      })\n\n      if (this.payload && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {\n        req.write(this.payload)\n      }\n\n      req.end()\n    }\n  }\n\n  defaultTestModeLogger (httpOptions, payload, formData) {\n    const testlog = debug.enabled ? debug : console.log\n    testlog('options: %o', httpOptions)\n    testlog('payload: %o', payload)\n    testlog('form: %o', formData)\n  }\n}\n\nmodule.exports = Request\n"]},"metadata":{},"sourceType":"script"}