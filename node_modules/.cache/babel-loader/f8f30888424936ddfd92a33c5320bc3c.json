{"ast":null,"code":"/**\n * Module exports.\n */\nmodule.exports = timeRange;\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\n\nfunction timeRange() {\n  var args = Array.prototype.slice.call(arguments),\n      lastArg = args.pop(),\n      useGMTzone = lastArg == \"GMT\",\n      currentDate = new Date();\n\n  if (!useGMTzone) {\n    args.push(lastArg);\n  }\n\n  var noOfArgs = args.length,\n      result = false,\n      numericArgs = args.map(function (n) {\n    return parseInt(n);\n  }); // timeRange(hour)\n\n  if (noOfArgs == 1) {\n    result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0]; // timeRange(hour1, hour2)\n  } else if (noOfArgs == 2) {\n    var currentHour = getCurrentHour(useGMTzone, currentDate);\n    result = numericArgs[0] <= currentHour && currentHour < numericArgs[1]; // timeRange(hour1, min1, hour2, min2)\n  } else if (noOfArgs == 4) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], 0), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0), secondsElapsedToday(numericArgs[2], numericArgs[3], 59)); // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n  } else if (noOfArgs == 6) {\n    result = valueInRange(secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]), secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), getCurrentSecond(useGMTzone, currentDate)), secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5]));\n  }\n\n  return result;\n}\n\nfunction secondsElapsedToday(hh, mm, ss) {\n  return hh * 3600 + mm * 60 + ss;\n}\n\nfunction getCurrentHour(gmt, currentDate) {\n  return gmt ? currentDate.getUTCHours() : currentDate.getHours();\n}\n\nfunction getCurrentMinute(gmt, currentDate) {\n  return gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes();\n}\n\nfunction getCurrentSecond(gmt, currentDate) {\n  return gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds();\n} // start <= value <= finish\n\n\nfunction valueInRange(start, value, finish) {\n  return start <= value && value <= finish;\n}","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/pac-resolver/timeRange.js"],"names":["module","exports","timeRange","args","Array","prototype","slice","call","arguments","lastArg","pop","useGMTzone","currentDate","Date","push","noOfArgs","length","result","numericArgs","map","n","parseInt","getCurrentHour","currentHour","valueInRange","secondsElapsedToday","getCurrentMinute","getCurrentSecond","hh","mm","ss","gmt","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","start","value","finish"],"mappings":"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","sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = timeRange;\n\n/**\n * True during (or between) the specified time(s).\n *\n * Even though the examples don't show it, this parameter may be present in\n * each of the different parameter profiles, always as the last parameter.\n *\n *\n * Examples:\n *\n * ``` js\n * timerange(12)\n * true from noon to 1pm.\n *\n * timerange(12, 13)\n * same as above.\n *\n * timerange(12, \"GMT\")\n * true from noon to 1pm, in GMT timezone.\n *\n * timerange(9, 17)\n * true from 9am to 5pm.\n *\n * timerange(8, 30, 17, 00)\n * true from 8:30am to 5:00pm.\n *\n * timerange(0, 0, 0, 0, 0, 30)\n * true between midnight and 30 seconds past midnight.\n * ```\n *\n * timeRange(hour)\n * timeRange(hour1, hour2)\n * timeRange(hour1, min1, hour2, min2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2)\n * timeRange(hour1, min1, sec1, hour2, min2, sec2, gmt)\n *\n * @param {String} hour is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)\n * @param {String} min minutes from 0 to 59.\n * @param {String} sec seconds from 0 to 59.\n * @param {String} gmt either the string \"GMT\" for GMT timezone, or not specified, for local timezone.\n * @return {Boolean}\n */\n\nfunction timeRange () {\n  var args        = Array.prototype.slice.call(arguments),\n      lastArg     = args.pop(),\n      useGMTzone  = (lastArg == \"GMT\"),\n      currentDate = new Date();\n\n  if (!useGMTzone) { args.push(lastArg); }\n\n  var noOfArgs    = args.length,\n      result      = false,\n      numericArgs = args.map(function(n) { return parseInt(n) });\n\n  // timeRange(hour)\n  if (noOfArgs == 1) {\n    result = getCurrentHour(useGMTzone, currentDate) == numericArgs[0];\n\n  // timeRange(hour1, hour2)\n  } else if (noOfArgs == 2) {\n    var currentHour = getCurrentHour(useGMTzone, currentDate);\n    result = (numericArgs[0] <= currentHour) && (currentHour < numericArgs[1]);\n\n  // timeRange(hour1, min1, hour2, min2)\n  } else if (noOfArgs == 4) {\n    result =\n      valueInRange(\n        secondsElapsedToday(numericArgs[0], numericArgs[1], 0),\n        secondsElapsedToday(getCurrentHour(useGMTzone, currentDate), getCurrentMinute(useGMTzone, currentDate), 0),\n        secondsElapsedToday(numericArgs[2], numericArgs[3], 59)\n      );\n\n  // timeRange(hour1, min1, sec1, hour2, min2, sec2)\n  } else if (noOfArgs == 6) {\n    result =\n      valueInRange(\n        secondsElapsedToday(numericArgs[0], numericArgs[1], numericArgs[2]),\n        secondsElapsedToday(\n          getCurrentHour(useGMTzone, currentDate),\n          getCurrentMinute(useGMTzone, currentDate),\n          getCurrentSecond(useGMTzone, currentDate)\n        ),\n        secondsElapsedToday(numericArgs[3], numericArgs[4], numericArgs[5])\n      );\n  }\n\n  return result;\n}\n\nfunction secondsElapsedToday (hh, mm, ss) {\n  return ((hh*3600) + (mm*60) + ss);\n}\n\nfunction getCurrentHour (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCHours() : currentDate.getHours());\n}\n\nfunction getCurrentMinute (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCMinutes() : currentDate.getMinutes());\n}\n\nfunction getCurrentSecond (gmt, currentDate) {\n  return (gmt ? currentDate.getUTCSeconds() : currentDate.getSeconds());\n}\n\n// start <= value <= finish\nfunction valueInRange (start, value, finish) {\n  return (start <= value) && (value <= finish);\n}\n"]},"metadata":{},"sourceType":"script"}