{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nvar url = require('url');\n\nvar LRU = require('lru-cache');\n\nvar Agent = require('agent-base');\n\nvar inherits = require('util').inherits;\n\nvar debug = require('debug')('proxy-agent');\n\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar PacProxyAgent = require('pac-proxy-agent');\n\nvar HttpProxyAgent = require('http-proxy-agent');\n\nvar HttpsProxyAgent = require('https-proxy-agent');\n\nvar SocksProxyAgent = require('socks-proxy-agent');\n/**\n * Module exports.\n */\n\n\nexports = module.exports = ProxyAgent;\n/**\n * Number of `http.Agent` instances to cache.\n *\n * This value was arbitrarily chosen... a better\n * value could be conceived with some benchmarks.\n */\n\nvar cacheSize = 20;\n/**\n * Cache for `http.Agent` instances.\n */\n\nexports.cache = new LRU(cacheSize);\n/**\n * Built-in proxy types.\n */\n\nexports.proxies = Object.create(null);\nexports.proxies.http = httpOrHttpsProxy;\nexports.proxies.https = httpOrHttpsProxy;\nexports.proxies.socks = SocksProxyAgent;\nexports.proxies.socks4 = SocksProxyAgent;\nexports.proxies.socks4a = SocksProxyAgent;\nexports.proxies.socks5 = SocksProxyAgent;\nexports.proxies.socks5h = SocksProxyAgent;\nPacProxyAgent.protocols.forEach(function (protocol) {\n  exports.proxies['pac+' + protocol] = PacProxyAgent;\n});\n\nfunction httpOrHttps(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return https.globalAgent;\n  } else {\n    // HTTP\n    return http.globalAgent;\n  }\n}\n\nfunction httpOrHttpsProxy(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return new HttpsProxyAgent(opts);\n  } else {\n    // HTTP\n    return new HttpProxyAgent(opts);\n  }\n}\n\nfunction mapOptsToProxy(opts) {\n  // NO_PROXY case\n  if (!opts) {\n    return {\n      uri: 'no proxy',\n      fn: httpOrHttps\n    };\n  }\n\n  if ('string' == typeof opts) opts = url.parse(opts);\n  var proxies;\n\n  if (opts.proxies) {\n    proxies = Object.assign({}, exports.proxies, opts.proxies);\n  } else {\n    proxies = exports.proxies;\n  } // get the requested proxy \"protocol\"\n\n\n  var protocol = opts.protocol;\n\n  if (!protocol) {\n    throw new TypeError('You must specify a \"protocol\" for the ' + 'proxy type (' + Object.keys(proxies).join(', ') + ')');\n  } // strip the trailing \":\" if present\n\n\n  if (':' == protocol[protocol.length - 1]) {\n    protocol = protocol.substring(0, protocol.length - 1);\n  } // get the proxy `http.Agent` creation function\n\n\n  var proxyFn = proxies[protocol];\n\n  if ('function' != typeof proxyFn) {\n    throw new TypeError('unsupported proxy protocol: \"' + protocol + '\"');\n  } // format the proxy info back into a URI, since an opts object\n  // could have been passed in originally. This generated URI is used\n  // as part of the \"key\" for the LRU cache\n\n\n  return {\n    opts: opts,\n    uri: url.format({\n      protocol: protocol + ':',\n      slashes: true,\n      auth: opts.auth,\n      hostname: opts.hostname || opts.host,\n      port: opts.port\n    }),\n    fn: proxyFn\n  };\n}\n/**\n * Attempts to get an `http.Agent` instance based off of the given proxy URI\n * information, and the `secure` flag.\n *\n * An LRU cache is used, to prevent unnecessary creation of proxy\n * `http.Agent` instances.\n *\n * @param {String} uri proxy url\n * @param {Boolean} secure true if this is for an HTTPS request, false for HTTP\n * @return {http.Agent}\n * @api public\n */\n\n\nfunction ProxyAgent(opts) {\n  if (!(this instanceof ProxyAgent)) return new ProxyAgent(opts);\n  debug('creating new ProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n\n  if (opts) {\n    var proxy = mapOptsToProxy(opts);\n    this.proxy = proxy.opts;\n    this.proxyUri = proxy.uri;\n    this.proxyFn = proxy.fn;\n  }\n}\n\ninherits(ProxyAgent, Agent);\n/**\n *\n */\n\nfunction connect(req, opts, fn) {\n  var proxyOpts = this.proxy;\n  var proxyUri = this.proxyUri;\n  var proxyFn = this.proxyFn; // if we did not instantiate with a proxy, set one per request\n\n  if (!proxyOpts) {\n    var urlOpts = getProxyForUrl(opts);\n    var proxy = mapOptsToProxy(urlOpts, opts);\n    proxyOpts = proxy.opts;\n    proxyUri = proxy.uri;\n    proxyFn = proxy.fn;\n  } // create the \"key\" for the LRU cache\n\n\n  var key = proxyUri;\n  if (opts.secureEndpoint) key += ' secure'; // attempt to get a cached `http.Agent` instance first\n\n  var agent = exports.cache.get(key);\n\n  if (!agent) {\n    // get an `http.Agent` instance from protocol-specific agent function\n    agent = proxyFn(proxyOpts, opts.secureEndpoint);\n\n    if (agent) {\n      exports.cache.set(key, agent);\n    }\n  } else {\n    debug('cache hit with key: %o', key);\n  }\n\n  if (!proxyOpts) {\n    agent.addRequest(req, opts);\n  } else {\n    // XXX: agent.callback() is an agent-base-ism\n    agent.callback(req, opts, fn);\n  }\n}","map":{"version":3,"sources":["/home/yamin/My_repos/new-email-app/new-email-app/node_modules/proxy-agent/index.js"],"names":["url","require","LRU","Agent","inherits","debug","getProxyForUrl","http","https","PacProxyAgent","HttpProxyAgent","HttpsProxyAgent","SocksProxyAgent","exports","module","ProxyAgent","cacheSize","cache","proxies","Object","create","httpOrHttpsProxy","socks","socks4","socks4a","socks5","socks5h","protocols","forEach","protocol","httpOrHttps","opts","secureEndpoint","globalAgent","mapOptsToProxy","uri","fn","parse","assign","TypeError","keys","join","length","substring","proxyFn","format","slashes","auth","hostname","host","port","call","connect","proxy","proxyUri","req","proxyOpts","urlOpts","key","agent","get","set","addRequest","callback"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar url = require('url');\nvar LRU = require('lru-cache');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('proxy-agent');\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar http = require('http');\nvar https = require('https');\nvar PacProxyAgent = require('pac-proxy-agent');\nvar HttpProxyAgent = require('http-proxy-agent');\nvar HttpsProxyAgent = require('https-proxy-agent');\nvar SocksProxyAgent = require('socks-proxy-agent');\n\n/**\n * Module exports.\n */\n\nexports = module.exports = ProxyAgent;\n\n/**\n * Number of `http.Agent` instances to cache.\n *\n * This value was arbitrarily chosen... a better\n * value could be conceived with some benchmarks.\n */\n\nvar cacheSize = 20;\n\n/**\n * Cache for `http.Agent` instances.\n */\n\nexports.cache = new LRU(cacheSize);\n\n/**\n * Built-in proxy types.\n */\n\nexports.proxies = Object.create(null);\nexports.proxies.http = httpOrHttpsProxy;\nexports.proxies.https = httpOrHttpsProxy;\nexports.proxies.socks = SocksProxyAgent;\nexports.proxies.socks4 = SocksProxyAgent;\nexports.proxies.socks4a = SocksProxyAgent;\nexports.proxies.socks5 = SocksProxyAgent;\nexports.proxies.socks5h = SocksProxyAgent;\n\nPacProxyAgent.protocols.forEach(function (protocol) {\n  exports.proxies['pac+' + protocol] = PacProxyAgent;\n});\n\nfunction httpOrHttps(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return https.globalAgent;\n  } else {\n    // HTTP\n    return http.globalAgent;\n  }\n}\n\nfunction httpOrHttpsProxy(opts, secureEndpoint) {\n  if (secureEndpoint) {\n    // HTTPS\n    return new HttpsProxyAgent(opts);\n  } else {\n    // HTTP\n    return new HttpProxyAgent(opts);\n  }\n}\n\nfunction mapOptsToProxy(opts) {\n  // NO_PROXY case\n  if (!opts) {\n    return {\n      uri: 'no proxy',\n      fn: httpOrHttps\n    };\n  }\n\n  if ('string' == typeof opts) opts = url.parse(opts);\n\n  var proxies;\n  if (opts.proxies) {\n    proxies = Object.assign({}, exports.proxies, opts.proxies);\n  } else {\n    proxies = exports.proxies;\n  }\n\n  // get the requested proxy \"protocol\"\n  var protocol = opts.protocol;\n  if (!protocol) {\n    throw new TypeError('You must specify a \"protocol\" for the ' +\n                        'proxy type (' + Object.keys(proxies).join(', ') + ')');\n  }\n\n  // strip the trailing \":\" if present\n  if (':' == protocol[protocol.length - 1]) {\n    protocol = protocol.substring(0, protocol.length - 1);\n  }\n\n  // get the proxy `http.Agent` creation function\n  var proxyFn = proxies[protocol];\n  if ('function' != typeof proxyFn) {\n    throw new TypeError('unsupported proxy protocol: \"' + protocol + '\"');\n  }\n\n  // format the proxy info back into a URI, since an opts object\n  // could have been passed in originally. This generated URI is used\n  // as part of the \"key\" for the LRU cache\n  return {\n    opts: opts,\n    uri: url.format({\n      protocol: protocol + ':',\n      slashes: true,\n      auth: opts.auth,\n      hostname: opts.hostname || opts.host,\n      port: opts.port\n    }),\n    fn: proxyFn,\n  }\n}\n\n/**\n * Attempts to get an `http.Agent` instance based off of the given proxy URI\n * information, and the `secure` flag.\n *\n * An LRU cache is used, to prevent unnecessary creation of proxy\n * `http.Agent` instances.\n *\n * @param {String} uri proxy url\n * @param {Boolean} secure true if this is for an HTTPS request, false for HTTP\n * @return {http.Agent}\n * @api public\n */\n\nfunction ProxyAgent (opts) {\n  if (!(this instanceof ProxyAgent)) return new ProxyAgent(opts);\n  debug('creating new ProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n\n  if (opts) {\n    var proxy = mapOptsToProxy(opts);\n    this.proxy = proxy.opts;\n    this.proxyUri = proxy.uri;\n    this.proxyFn = proxy.fn;\n  }\n}\ninherits(ProxyAgent, Agent);\n\n/**\n *\n */\n\nfunction connect (req, opts, fn) {\n  var proxyOpts = this.proxy;\n  var proxyUri = this.proxyUri;\n  var proxyFn = this.proxyFn;\n\n  // if we did not instantiate with a proxy, set one per request\n  if (!proxyOpts) {\n    var urlOpts = getProxyForUrl(opts);\n    var proxy = mapOptsToProxy(urlOpts, opts);\n    proxyOpts = proxy.opts;\n    proxyUri = proxy.uri;\n    proxyFn = proxy.fn;\n  }\n\n  // create the \"key\" for the LRU cache\n  var key = proxyUri;\n  if (opts.secureEndpoint) key += ' secure';\n\n  // attempt to get a cached `http.Agent` instance first\n  var agent = exports.cache.get(key);\n  if (!agent) {\n    // get an `http.Agent` instance from protocol-specific agent function\n    agent = proxyFn(proxyOpts, opts.secureEndpoint);\n    if (agent) {\n      exports.cache.set(key, agent);\n    }\n  } else {\n    debug('cache hit with key: %o', key);\n  }\n\n  if (!proxyOpts) {\n    agent.addRequest(req, opts);\n  } else {\n    // XXX: agent.callback() is an agent-base-ism\n    agent.callback(req, opts, fn);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}