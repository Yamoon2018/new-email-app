{"version":3,"sources":["send_email_smtp.js","App.js","index.js"],"names":["require","App","state","sender_name","sender_email","receiver_name","receiver_email","email_subject","email_body","email_attachment","email_status","changeSenderName","bind","changeSenderEmail","changeReceiverName","changeReceiverEmail","changeEmailSubject","changeEmailBody","handleSelectChange","onSubmit","event","console","log","target","value","this","setState","preventDefault","send_email_db","axios","post","then","res","data","className","onChange","placeholder","type","name","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49835d14.chunk.js","sourcesContent":["var nodemail = require('nodemailer');\n\nfunction send_email_db(req){\n    console.log(\"req==\"+ JSON.stringify(req.body));\n    //break;\n    var receiver_emails='';\n    var sender_email='';\n    var date = new Date();\n      if(req){\n        \n          sender_email = JSON.stringify(req.body.sender_email);\n        receiver_emails = JSON.stringify(req.body.receiver_email).split(',');\n          \n        var email_status   =  req.body.email_status;\n        var email_subject = req.body.email_subject;\n        var email_body = req.body.email_body;\n        console.log(\"convert==\"+receiver_emails.length); \n        \n  \n    }\n  \n  \n    const email_output = `\n        \n        <h3>Your emails sent ${email_subject}</h3>\n        <ul>\n            <li> Email ${email_body}</li>\n        </ul>\n    `;\n  \n    let tranport_email = nodemail.createTransport({\n      port: 587,\n      address: 'smtp.mailgun.org',    \n      host: 'https://heroku-email-app.herokuapp.com',\n        auth: {\n            user: 'postmaster@sandbox9ec8e5daaec146fca37a45479baea5f2.mailgun.org' ,\n            pass: '98e50b79f92e630a413bc3d8a7716c02-2af183ba-fa201257',\n        }\n    });\n    \n    var email_counter_start =0;\n    var receiver_email_list =0;\n  \n    email_status === \"all\" ? receiver_email_list=[receiver_emails] : receiver_email_list = receiver_emails;\n       \n    while  (email_counter_start < receiver_email_list.length) {\n    \n      console.log(\"email options==\"+receiver_email_list[email_counter_start]);\n        let mailoptions = {\n            from: sender_email, //\"yamin.barakat@gmail.com\",\n            to: receiver_email_list[email_counter_start],\n            subject: email_subject+'  '+date,\n            text: email_body,\n            html: email_output\n        };\n        \n    \n        tranport_email.sendMail(mailoptions, (err, info)=>{\n            if(err) {\n                return console.log(err);\n            }\n            console.log('email sent %s', info.messageId );\n        });\n      \n      email_counter_start +=1;\n    }\n    //send_DB(req, res);\n  }","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport send_email_db from './send_email_smtp';\n\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            sender_name: '',\n            sender_email: '',\n            receiver_name: '',\n            receiver_email: '',\n            email_subject: '',\n            email_body: '',\n            email_attachment: '',\n            email_status:''\n        }\n\n        this.changeSenderName = this.changeSenderName.bind(this);\n        this.changeSenderEmail = this.changeSenderEmail.bind(this);\n        this.changeReceiverName = this.changeReceiverName.bind(this);\n        this.changeReceiverEmail = this.changeReceiverEmail.bind(this);\n        this.changeEmailSubject = this.changeEmailSubject.bind(this);\n        this.changeEmailBody = this.changeEmailBody.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this) ;\n\n    }\n\n    changeSenderName(event){\n        console.log(event.target.value);\n        this.setState({\n            sender_name: event.target.value\n        }) \n    }\n\n    changeSenderEmail(event){\n        this.setState({\n            sender_email: event.target.value\n        }) \n    }\n\n    changeReceiverName(event){\n        this.setState({\n            receiver_name: event.target.value\n        }) \n    }\n\n    changeReceiverEmail(event){\n        this.setState({\n            receiver_email: event.target.value\n        }) \n    }\n\n    changeEmailSubject(event){\n        this.setState({\n            email_subject: event.target.value\n        }) \n    }\n\n    changeEmailBody(event){\n        this.setState({\n            email_body: event.target.value\n        }) \n    }\n\n    handleSelectChange(event){\n        this.setState({\n            email_status: event.target.value\n        }) \n    }\n\n    onSubmit(event){\n        event.preventDefault();\n//console.log(\"sender_name =\"+this.state.sender_name);\n        const send_email_db={\n            sender_name:    this.state.sender_name,\n            sender_email:   this.state.sender_email,\n            receiver_name:  this.state.receiver_name,\n            receiver_email: this.state.receiver_email,\n            email_subject:  this.state.email_subject,\n            email_body:     this.state.email_body,\n            //email_attachment: '',\n            //email_status:   this.state.email_status\n\n        }\n\n        axios.post('http://localhost:4000/app/save_db', send_email_db)\n        .then(res => console.log(res.data));\n\n        console.log(\"sender email\"+send_email_db.sender_email);\n\n    }\n\n    render(){\n        return (\n            <div>\n                <div>\n                    <p><b><h3>Yamin's Email App</h3></b></p>\n                </div>\n                <div className=\"container\">\n                    <div className=\"form-div\">\n                    <form onSubmit={this.onSubmit}>\n          Sender's Name\n          <input value={this.state.sender_name} className=\"form-control form-group\" onChange={this.changeSenderName} placeholder=\"Sender's name...\" type=\"text\" name=\"sender_name\" /> \n          <p></p>\n          Sender's Email\n          <input value={this.state.sender_email} className=\"form-control form-group\" onChange={this.changeSenderEmail} placeholder=\"Sender's email...\" type=\"text\" name=\"sender_email\"  />\n          <p></p>\n          Receiever's Name<input value={this.state.receiver_name} className=\"form-control form-group\"  onChange={this.changeReceiverName} placeholder=\"Receiver's name...\" type=\"text\" name=\"receiver_name\" /> \n          <p></p>\n          Receiever's Email(s)<input value={this.state.receiver_email} className=\"form-control form-group\" onChange={this.changeReceiverEmail} placeholder=\"Receiver's Email..\" type=\"text\" name=\"receiver_email\" />\n          <p></p>\n          Subject <input value={this.state.email_subject} className=\"form-control form-group\" onChange={this.changeEmailSubject} placeholder=\"Subject...\" type=\"text\" name=\"email_subject\" /> \n          <p></p>\n          Message          \n          <textarea value={this.state.email_body} className=\"form-control form-group\" onChange={this.changeEmailBody} name=\"email_body\" />\n          <p></p>\n          Email Status\n          <select onChange={this.handleSelectChange} name=\"select_email_status\" value={this.state.email_status} >          \n          <option value=\"all\">Send one email to all receievers</option>\n          <option value=\"each\">Send one email to each receiever</option>          \n        </select>\n          <p></p>\n          \n          <button type=\"submit\" className=\"btn btn-danger btn-block\" value =\"btn_sendEmail\">Send Email</button>\n          \n          </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}