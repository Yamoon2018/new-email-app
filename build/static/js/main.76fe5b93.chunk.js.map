{"version":3,"sources":["send_email_smtp.js","App.js","index.js"],"names":["nodemail","require","config","module","exports","req","console","log","receiver_emails","sender_email","date","Date","receiver_email","split","email_status","email_subject","email_body","length","email_output","tranport_email","createTransport","service","process","SERVICE","auth","user","USER_EMAIL","pass","PASS_EMAIL","email_counter_start","receiver_email_list","mailoptions","from","to","subject","text","html","sendMail","err","info","messageId","App","state","sender_name","receiver_name","email_attachment","changeSenderName","bind","changeSenderEmail","changeReceiverName","changeReceiverEmail","changeEmailSubject","changeEmailBody","handleSelectChange","onSubmit","event","target","value","this","setState","preventDefault","send_email_db","axios","post","then","res","data","catch","className","onChange","placeholder","type","name","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76fe5b93.chunk.js","sourcesContent":["//var nodemail = require('nodemailer');\n// const mailgun = require(\"mailgun-js\");\n// const DOMAIN = 'https://new-email-app.herokuapp.com/';\nvar nodemail = require('nodemailer');\n\nconst dotenv  = require('dotenv');\n\ndotenv.config();\n\n//const mg = mailgun({apiKey: process.env.API_KEY, domain: DOMAIN}); \n\nmodule.exports = function send_email_db(req){\n    console.log(\"req==\"+ req);\n    //break;\n    var receiver_emails='';\n    var sender_email='';\n    var date = new Date();\n    if(req){        \n          sender_email = req.sender_email;\n        receiver_emails = req.receiver_email.split(',');\n          \n        var email_status   =  req.email_status;\n        var email_subject = req.email_subject;\n        var email_body = req.email_body;\n        console.log(\"convert==\"+receiver_emails.length);        \n    }\n  \n  \n    const email_output = `\n        \n        <h3>Your emails sent ${email_subject}</h3>\n        <ul>\n            <li> Email ${email_body}</li>\n        </ul>\n    `;\n  \n    let tranport_email = nodemail.createTransport({\n    //   port: 587,\n    //   address: 'smtp.mailgun.org',    \n    //   host: 'https://new-email-app.herokuapp.com/',\n        service: process.env.SERVICE,\n        auth: {\n            user:  process.env.USER_EMAIL ,\n            pass:  process.env.PASS_EMAIL,\n        }\n    });\n    \n    var email_counter_start =0;\n    var receiver_email_list =0;\n  \n    email_status === \"all\" ? receiver_email_list=[receiver_emails] : receiver_email_list = receiver_emails;\n       \n    while  (email_counter_start < receiver_email_list.length) {\n    \n      console.log(\"email options==\"+receiver_email_list[email_counter_start]);\n        let mailoptions = {\n            from: sender_email, //\"yamin.barakat@gmail.com\",\n            to: receiver_email_list[email_counter_start],\n            subject: email_subject+'  '+date,\n            text: email_body,\n            html: email_output\n        };\n        \n        // mg.messages().send(mailoptions, function (error, body) {\n        //     if(!error){\n        //         console.log(body);\n        //     }\n        //     else{\n        //         console.log(error);\n        //     }            \n        // });\n    \n        tranport_email.sendMail(mailoptions, (err, info)=>{\n            if(err) {\n                return console.log(err);\n            }\n            console.log('email sent %s', info.messageId );\n        });\n      \n      email_counter_start +=1;\n    }\n    //send_DB(req, res);\n  }\n\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport send_email_db_func from './send_email_smtp';\nimport { logDOM } from '@testing-library/react';\n\nconst dotenv  = require('dotenv');\n\ndotenv.config();\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state={\n            sender_name: '',\n            sender_email: '',\n            receiver_name: '',\n            receiver_email: '',\n            email_subject: '',\n            email_body: '',\n            email_attachment: '',\n            email_status:''\n        }\n\n        this.changeSenderName = this.changeSenderName.bind(this);\n        this.changeSenderEmail = this.changeSenderEmail.bind(this);\n        this.changeReceiverName = this.changeReceiverName.bind(this);\n        this.changeReceiverEmail = this.changeReceiverEmail.bind(this);\n        this.changeEmailSubject = this.changeEmailSubject.bind(this);\n        this.changeEmailBody = this.changeEmailBody.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this) ;\n\n    }\n\n    changeSenderName(event){\n        console.log(event.target.value);\n        this.setState({\n            sender_name: event.target.value\n        }) \n    }\n\n    changeSenderEmail(event){\n        this.setState({\n            sender_email: event.target.value\n        }) \n    }\n\n    changeReceiverName(event){\n        this.setState({\n            receiver_name: event.target.value\n        }) \n    }\n\n    changeReceiverEmail(event){\n        this.setState({\n            receiver_email: event.target.value\n        }) \n    }\n\n    changeEmailSubject(event){\n        this.setState({\n            email_subject: event.target.value\n        }) \n    }\n\n    changeEmailBody(event){\n        this.setState({\n            email_body: event.target.value\n        }) \n    }\n\n    handleSelectChange(event){\n        this.setState({\n            email_status: event.target.value\n        }) \n    }\n\n    onSubmit(event){\n        event.preventDefault();\n//console.log(\"sender_name =\"+this.state.sender_name);\n        const send_email_db={\n            sender_name:    this.state.sender_name,\n            sender_email:   this.state.sender_email,\n            receiver_name:  this.state.receiver_name,\n            receiver_email: this.state.receiver_email,\n            email_subject:  this.state.email_subject,\n            email_body:     this.state.email_body,\n            email_status:   this.state.email_status\n            //email_attachment: '',\n            //email_status:   this.state.email_status\n\n        }\n\n        //var port_post = process.env.PORT || 4000;\n\n        axios.post('http://localhost:4000/app/save_db', send_email_db)\n        .then(res => console.log(res.data))\n        .catch(err=>{\n            console.log(\"saving error = \"+err);\n        }) ;\n\n        //console.log(\"sender email\"+send_email_db.sender_email);\n        //send_email_db_func(send_email_db);\n\n\n    }\n\n    render(){\n        return (\n            <div>\n                <div>\n                    <p><b><h3>Yamin's Email App</h3></b></p>\n                </div>\n                <div className=\"container\">\n                    <div className=\"form-div\">\n                    <form onSubmit={this.onSubmit}>\n          Sender's Name\n          <input value={this.state.sender_name} className=\"form-control form-group\" onChange={this.changeSenderName} placeholder=\"Sender's name...\" type=\"text\" name=\"sender_name\" /> \n          <p></p>\n          Sender's Email\n          <input value={this.state.sender_email} className=\"form-control form-group\" onChange={this.changeSenderEmail} placeholder=\"Sender's email...\" type=\"text\" name=\"sender_email\"  />\n          <p></p>\n          Receiever's Name<input value={this.state.receiver_name} className=\"form-control form-group\"  onChange={this.changeReceiverName} placeholder=\"Receiver's name...\" type=\"text\" name=\"receiver_name\" /> \n          <p></p>\n          Receiever's Email(s)<input value={this.state.receiver_email} className=\"form-control form-group\" onChange={this.changeReceiverEmail} placeholder=\"Receiver's Email..\" type=\"text\" name=\"receiver_email\" />\n          <p></p>\n          Subject <input value={this.state.email_subject} className=\"form-control form-group\" onChange={this.changeEmailSubject} placeholder=\"Subject...\" type=\"text\" name=\"email_subject\" /> \n          <p></p>\n          Message          \n          <textarea value={this.state.email_body} className=\"form-control form-group\" onChange={this.changeEmailBody} name=\"email_body\" />\n          <p></p>\n          Email Status\n          <select onChange={this.handleSelectChange} name=\"select_email_status\" value={this.state.email_status} >          \n          <option value=\"all\">Send one email to all receievers</option>\n          <option value=\"each\">Send one email to each receiever</option>          \n        </select>\n          <p></p>\n          \n          <button type=\"submit\" className=\"btn btn-danger btn-block\" value =\"btn_sendEmail\">Send Email</button>\n          \n          </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}